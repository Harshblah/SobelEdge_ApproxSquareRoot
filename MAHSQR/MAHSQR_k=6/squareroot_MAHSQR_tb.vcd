$date
	Tue May 06 16:49:02 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module squareroot_MAHSQR_tb $end
$var wire 8 ! final_op [7:0] $end
$var reg 16 " R [15:0] $end
$scope module uut $end
$var wire 16 # R [15:0] $end
$var wire 6 $ zm [5:0] $end
$var wire 6 % y [5:0] $end
$var wire 16 & shifted_num [15:0] $end
$var wire 1 ' select_line_mux $end
$var wire 6 ( rem [5:0] $end
$var wire 3 ) quo_exact_z [2:0] $end
$var wire 8 * quo_exact_x [7:0] $end
$var wire 16 + num [15:0] $end
$var wire 8 , maybe_Q_1 [7:0] $end
$var wire 8 - maybe_Q_0 [7:0] $end
$var wire 3 . mLOD [2:0] $end
$var wire 8 / final_op [7:0] $end
$var wire 10 0 Y [9:0] $end
$scope module MSHIFT $end
$var wire 16 1 numerator [15:0] $end
$var wire 16 2 stage9 [15:0] $end
$var wire 16 3 stage8 [15:0] $end
$var wire 16 4 stage7 [15:0] $end
$var wire 16 5 stage6 [15:0] $end
$var wire 16 6 stage5 [15:0] $end
$var wire 16 7 stage4 [15:0] $end
$var wire 16 8 stage3 [15:0] $end
$var wire 16 9 stage2 [15:0] $end
$var wire 16 : stage1 [15:0] $end
$var wire 16 ; num_op [15:0] $end
$var wire 3 < mshift [2:0] $end
$scope module shift00 $end
$var wire 16 = data_in [15:0] $end
$var wire 16 > data_out [15:0] $end
$scope begin shift_logic[0] $end
$var parameter 2 ? i $end
$scope begin genblk1 $end
$scope module u_mux $end
$var wire 1 @ and0 $end
$var wire 1 A and1 $end
$var wire 1 B d0 $end
$var wire 1 C d1 $end
$var wire 1 D not_sel $end
$var wire 1 E sel $end
$var wire 1 F y_mux $end
$upscope $end
$upscope $end
$upscope $end
$scope begin shift_logic[1] $end
$var parameter 2 G i $end
$scope begin genblk1 $end
$scope module u_mux $end
$var wire 1 H and0 $end
$var wire 1 I and1 $end
$var wire 1 J d0 $end
$var wire 1 K d1 $end
$var wire 1 L not_sel $end
$var wire 1 M sel $end
$var wire 1 N y_mux $end
$upscope $end
$upscope $end
$upscope $end
$scope begin shift_logic[2] $end
$var parameter 3 O i $end
$scope begin genblk1 $end
$scope module u_mux $end
$var wire 1 P and0 $end
$var wire 1 Q and1 $end
$var wire 1 R d0 $end
$var wire 1 S d1 $end
$var wire 1 T not_sel $end
$var wire 1 U sel $end
$var wire 1 V y_mux $end
$upscope $end
$upscope $end
$upscope $end
$scope begin shift_logic[3] $end
$var parameter 3 W i $end
$scope begin genblk1 $end
$scope module u_mux $end
$var wire 1 X and0 $end
$var wire 1 Y and1 $end
$var wire 1 Z d0 $end
$var wire 1 [ d1 $end
$var wire 1 \ not_sel $end
$var wire 1 ] sel $end
$var wire 1 ^ y_mux $end
$upscope $end
$upscope $end
$upscope $end
$scope begin shift_logic[4] $end
$var parameter 4 _ i $end
$scope begin genblk1 $end
$scope module u_mux $end
$var wire 1 ` and0 $end
$var wire 1 a and1 $end
$var wire 1 b d0 $end
$var wire 1 c d1 $end
$var wire 1 d not_sel $end
$var wire 1 e sel $end
$var wire 1 f y_mux $end
$upscope $end
$upscope $end
$upscope $end
$scope begin shift_logic[5] $end
$var parameter 4 g i $end
$scope begin genblk1 $end
$scope module u_mux $end
$var wire 1 h and0 $end
$var wire 1 i and1 $end
$var wire 1 j d0 $end
$var wire 1 k d1 $end
$var wire 1 l not_sel $end
$var wire 1 m sel $end
$var wire 1 n y_mux $end
$upscope $end
$upscope $end
$upscope $end
$scope begin shift_logic[6] $end
$var parameter 4 o i $end
$scope begin genblk1 $end
$scope module u_mux $end
$var wire 1 p and0 $end
$var wire 1 q and1 $end
$var wire 1 r d0 $end
$var wire 1 s d1 $end
$var wire 1 t not_sel $end
$var wire 1 u sel $end
$var wire 1 v y_mux $end
$upscope $end
$upscope $end
$upscope $end
$scope begin shift_logic[7] $end
$var parameter 4 w i $end
$scope begin genblk1 $end
$scope module u_mux $end
$var wire 1 x and0 $end
$var wire 1 y and1 $end
$var wire 1 z d0 $end
$var wire 1 { d1 $end
$var wire 1 | not_sel $end
$var wire 1 } sel $end
$var wire 1 ~ y_mux $end
$upscope $end
$upscope $end
$upscope $end
$scope begin shift_logic[8] $end
$var parameter 5 !" i $end
$scope begin genblk1 $end
$scope module u_mux $end
$var wire 1 "" and0 $end
$var wire 1 #" and1 $end
$var wire 1 $" d0 $end
$var wire 1 %" d1 $end
$var wire 1 &" not_sel $end
$var wire 1 '" sel $end
$var wire 1 (" y_mux $end
$upscope $end
$upscope $end
$upscope $end
$scope begin shift_logic[9] $end
$var parameter 5 )" i $end
$scope begin genblk1 $end
$scope module u_mux $end
$var wire 1 *" and0 $end
$var wire 1 +" and1 $end
$var wire 1 ," d0 $end
$var wire 1 -" d1 $end
$var wire 1 ." not_sel $end
$var wire 1 /" sel $end
$var wire 1 0" y_mux $end
$upscope $end
$upscope $end
$upscope $end
$scope begin shift_logic[10] $end
$var parameter 5 1" i $end
$scope begin genblk1 $end
$scope module u_mux $end
$var wire 1 2" and0 $end
$var wire 1 3" and1 $end
$var wire 1 4" d0 $end
$var wire 1 5" d1 $end
$var wire 1 6" not_sel $end
$var wire 1 7" sel $end
$var wire 1 8" y_mux $end
$upscope $end
$upscope $end
$upscope $end
$scope begin shift_logic[11] $end
$var parameter 5 9" i $end
$scope begin genblk1 $end
$scope module u_mux $end
$var wire 1 :" and0 $end
$var wire 1 ;" and1 $end
$var wire 1 <" d0 $end
$var wire 1 =" d1 $end
$var wire 1 >" not_sel $end
$var wire 1 ?" sel $end
$var wire 1 @" y_mux $end
$upscope $end
$upscope $end
$upscope $end
$scope begin shift_logic[12] $end
$var parameter 5 A" i $end
$scope begin genblk1 $end
$scope module u_mux $end
$var wire 1 B" and0 $end
$var wire 1 C" and1 $end
$var wire 1 D" d0 $end
$var wire 1 E" d1 $end
$var wire 1 F" not_sel $end
$var wire 1 G" sel $end
$var wire 1 H" y_mux $end
$upscope $end
$upscope $end
$upscope $end
$scope begin shift_logic[13] $end
$var parameter 5 I" i $end
$scope begin genblk1 $end
$scope module u_mux $end
$var wire 1 J" and0 $end
$var wire 1 K" and1 $end
$var wire 1 L" d0 $end
$var wire 1 M" d1 $end
$var wire 1 N" not_sel $end
$var wire 1 O" sel $end
$var wire 1 P" y_mux $end
$upscope $end
$upscope $end
$upscope $end
$scope begin shift_logic[14] $end
$var parameter 5 Q" i $end
$scope begin genblk1 $end
$scope module u_mux $end
$var wire 1 R" and0 $end
$var wire 1 S" and1 $end
$var wire 1 T" d0 $end
$var wire 1 U" d1 $end
$var wire 1 V" not_sel $end
$var wire 1 W" sel $end
$var wire 1 X" y_mux $end
$upscope $end
$upscope $end
$upscope $end
$scope begin shift_logic[15] $end
$var parameter 5 Y" i $end
$scope begin genblk1 $end
$scope module u_mux_u $end
$var wire 1 Z" and0 $end
$var wire 1 [" and1 $end
$var wire 1 \" d0 $end
$var wire 1 ]" d1 $end
$var wire 1 ^" not_sel $end
$var wire 1 _" sel $end
$var wire 1 `" y_mux $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module shift01 $end
$var wire 16 a" data_out [15:0] $end
$var wire 16 b" data_in [15:0] $end
$scope begin shift_logic[0] $end
$var parameter 2 c" i $end
$scope begin genblk1 $end
$scope module u_mux $end
$var wire 1 d" and0 $end
$var wire 1 e" and1 $end
$var wire 1 f" d0 $end
$var wire 1 g" d1 $end
$var wire 1 h" not_sel $end
$var wire 1 i" sel $end
$var wire 1 j" y_mux $end
$upscope $end
$upscope $end
$upscope $end
$scope begin shift_logic[1] $end
$var parameter 2 k" i $end
$scope begin genblk1 $end
$scope module u_mux $end
$var wire 1 l" and0 $end
$var wire 1 m" and1 $end
$var wire 1 n" d0 $end
$var wire 1 o" d1 $end
$var wire 1 p" not_sel $end
$var wire 1 q" sel $end
$var wire 1 r" y_mux $end
$upscope $end
$upscope $end
$upscope $end
$scope begin shift_logic[2] $end
$var parameter 3 s" i $end
$scope begin genblk1 $end
$scope module u_mux $end
$var wire 1 t" and0 $end
$var wire 1 u" and1 $end
$var wire 1 v" d0 $end
$var wire 1 w" d1 $end
$var wire 1 x" not_sel $end
$var wire 1 y" sel $end
$var wire 1 z" y_mux $end
$upscope $end
$upscope $end
$upscope $end
$scope begin shift_logic[3] $end
$var parameter 3 {" i $end
$scope begin genblk1 $end
$scope module u_mux $end
$var wire 1 |" and0 $end
$var wire 1 }" and1 $end
$var wire 1 ~" d0 $end
$var wire 1 !# d1 $end
$var wire 1 "# not_sel $end
$var wire 1 ## sel $end
$var wire 1 $# y_mux $end
$upscope $end
$upscope $end
$upscope $end
$scope begin shift_logic[4] $end
$var parameter 4 %# i $end
$scope begin genblk1 $end
$scope module u_mux $end
$var wire 1 &# and0 $end
$var wire 1 '# and1 $end
$var wire 1 (# d0 $end
$var wire 1 )# d1 $end
$var wire 1 *# not_sel $end
$var wire 1 +# sel $end
$var wire 1 ,# y_mux $end
$upscope $end
$upscope $end
$upscope $end
$scope begin shift_logic[5] $end
$var parameter 4 -# i $end
$scope begin genblk1 $end
$scope module u_mux $end
$var wire 1 .# and0 $end
$var wire 1 /# and1 $end
$var wire 1 0# d0 $end
$var wire 1 1# d1 $end
$var wire 1 2# not_sel $end
$var wire 1 3# sel $end
$var wire 1 4# y_mux $end
$upscope $end
$upscope $end
$upscope $end
$scope begin shift_logic[6] $end
$var parameter 4 5# i $end
$scope begin genblk1 $end
$scope module u_mux $end
$var wire 1 6# and0 $end
$var wire 1 7# and1 $end
$var wire 1 8# d0 $end
$var wire 1 9# d1 $end
$var wire 1 :# not_sel $end
$var wire 1 ;# sel $end
$var wire 1 <# y_mux $end
$upscope $end
$upscope $end
$upscope $end
$scope begin shift_logic[7] $end
$var parameter 4 =# i $end
$scope begin genblk1 $end
$scope module u_mux $end
$var wire 1 ># and0 $end
$var wire 1 ?# and1 $end
$var wire 1 @# d0 $end
$var wire 1 A# d1 $end
$var wire 1 B# not_sel $end
$var wire 1 C# sel $end
$var wire 1 D# y_mux $end
$upscope $end
$upscope $end
$upscope $end
$scope begin shift_logic[8] $end
$var parameter 5 E# i $end
$scope begin genblk1 $end
$scope module u_mux $end
$var wire 1 F# and0 $end
$var wire 1 G# and1 $end
$var wire 1 H# d0 $end
$var wire 1 I# d1 $end
$var wire 1 J# not_sel $end
$var wire 1 K# sel $end
$var wire 1 L# y_mux $end
$upscope $end
$upscope $end
$upscope $end
$scope begin shift_logic[9] $end
$var parameter 5 M# i $end
$scope begin genblk1 $end
$scope module u_mux $end
$var wire 1 N# and0 $end
$var wire 1 O# and1 $end
$var wire 1 P# d0 $end
$var wire 1 Q# d1 $end
$var wire 1 R# not_sel $end
$var wire 1 S# sel $end
$var wire 1 T# y_mux $end
$upscope $end
$upscope $end
$upscope $end
$scope begin shift_logic[10] $end
$var parameter 5 U# i $end
$scope begin genblk1 $end
$scope module u_mux $end
$var wire 1 V# and0 $end
$var wire 1 W# and1 $end
$var wire 1 X# d0 $end
$var wire 1 Y# d1 $end
$var wire 1 Z# not_sel $end
$var wire 1 [# sel $end
$var wire 1 \# y_mux $end
$upscope $end
$upscope $end
$upscope $end
$scope begin shift_logic[11] $end
$var parameter 5 ]# i $end
$scope begin genblk1 $end
$scope module u_mux $end
$var wire 1 ^# and0 $end
$var wire 1 _# and1 $end
$var wire 1 `# d0 $end
$var wire 1 a# d1 $end
$var wire 1 b# not_sel $end
$var wire 1 c# sel $end
$var wire 1 d# y_mux $end
$upscope $end
$upscope $end
$upscope $end
$scope begin shift_logic[12] $end
$var parameter 5 e# i $end
$scope begin genblk1 $end
$scope module u_mux $end
$var wire 1 f# and0 $end
$var wire 1 g# and1 $end
$var wire 1 h# d0 $end
$var wire 1 i# d1 $end
$var wire 1 j# not_sel $end
$var wire 1 k# sel $end
$var wire 1 l# y_mux $end
$upscope $end
$upscope $end
$upscope $end
$scope begin shift_logic[13] $end
$var parameter 5 m# i $end
$scope begin genblk1 $end
$scope module u_mux $end
$var wire 1 n# and0 $end
$var wire 1 o# and1 $end
$var wire 1 p# d0 $end
$var wire 1 q# d1 $end
$var wire 1 r# not_sel $end
$var wire 1 s# sel $end
$var wire 1 t# y_mux $end
$upscope $end
$upscope $end
$upscope $end
$scope begin shift_logic[14] $end
$var parameter 5 u# i $end
$scope begin genblk1 $end
$scope module u_mux $end
$var wire 1 v# and0 $end
$var wire 1 w# and1 $end
$var wire 1 x# d0 $end
$var wire 1 y# d1 $end
$var wire 1 z# not_sel $end
$var wire 1 {# sel $end
$var wire 1 |# y_mux $end
$upscope $end
$upscope $end
$upscope $end
$scope begin shift_logic[15] $end
$var parameter 5 }# i $end
$scope begin genblk1 $end
$scope module u_mux_u $end
$var wire 1 ~# and0 $end
$var wire 1 !$ and1 $end
$var wire 1 "$ d0 $end
$var wire 1 #$ d1 $end
$var wire 1 $$ not_sel $end
$var wire 1 %$ sel $end
$var wire 1 &$ y_mux $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module shift02 $end
$var wire 16 '$ data_in [15:0] $end
$var wire 16 ($ data_out [15:0] $end
$scope begin shift_logic[0] $end
$var parameter 2 )$ i $end
$scope begin genblk1 $end
$scope module u_mux $end
$var wire 1 *$ and0 $end
$var wire 1 +$ and1 $end
$var wire 1 ,$ d0 $end
$var wire 1 -$ d1 $end
$var wire 1 .$ not_sel $end
$var wire 1 /$ sel $end
$var wire 1 0$ y_mux $end
$upscope $end
$upscope $end
$upscope $end
$scope begin shift_logic[1] $end
$var parameter 2 1$ i $end
$scope begin genblk1 $end
$scope module u_mux $end
$var wire 1 2$ and0 $end
$var wire 1 3$ and1 $end
$var wire 1 4$ d0 $end
$var wire 1 5$ d1 $end
$var wire 1 6$ not_sel $end
$var wire 1 7$ sel $end
$var wire 1 8$ y_mux $end
$upscope $end
$upscope $end
$upscope $end
$scope begin shift_logic[2] $end
$var parameter 3 9$ i $end
$scope begin genblk1 $end
$scope module u_mux $end
$var wire 1 :$ and0 $end
$var wire 1 ;$ and1 $end
$var wire 1 <$ d0 $end
$var wire 1 =$ d1 $end
$var wire 1 >$ not_sel $end
$var wire 1 ?$ sel $end
$var wire 1 @$ y_mux $end
$upscope $end
$upscope $end
$upscope $end
$scope begin shift_logic[3] $end
$var parameter 3 A$ i $end
$scope begin genblk1 $end
$scope module u_mux $end
$var wire 1 B$ and0 $end
$var wire 1 C$ and1 $end
$var wire 1 D$ d0 $end
$var wire 1 E$ d1 $end
$var wire 1 F$ not_sel $end
$var wire 1 G$ sel $end
$var wire 1 H$ y_mux $end
$upscope $end
$upscope $end
$upscope $end
$scope begin shift_logic[4] $end
$var parameter 4 I$ i $end
$scope begin genblk1 $end
$scope module u_mux $end
$var wire 1 J$ and0 $end
$var wire 1 K$ and1 $end
$var wire 1 L$ d0 $end
$var wire 1 M$ d1 $end
$var wire 1 N$ not_sel $end
$var wire 1 O$ sel $end
$var wire 1 P$ y_mux $end
$upscope $end
$upscope $end
$upscope $end
$scope begin shift_logic[5] $end
$var parameter 4 Q$ i $end
$scope begin genblk1 $end
$scope module u_mux $end
$var wire 1 R$ and0 $end
$var wire 1 S$ and1 $end
$var wire 1 T$ d0 $end
$var wire 1 U$ d1 $end
$var wire 1 V$ not_sel $end
$var wire 1 W$ sel $end
$var wire 1 X$ y_mux $end
$upscope $end
$upscope $end
$upscope $end
$scope begin shift_logic[6] $end
$var parameter 4 Y$ i $end
$scope begin genblk1 $end
$scope module u_mux $end
$var wire 1 Z$ and0 $end
$var wire 1 [$ and1 $end
$var wire 1 \$ d0 $end
$var wire 1 ]$ d1 $end
$var wire 1 ^$ not_sel $end
$var wire 1 _$ sel $end
$var wire 1 `$ y_mux $end
$upscope $end
$upscope $end
$upscope $end
$scope begin shift_logic[7] $end
$var parameter 4 a$ i $end
$scope begin genblk1 $end
$scope module u_mux $end
$var wire 1 b$ and0 $end
$var wire 1 c$ and1 $end
$var wire 1 d$ d0 $end
$var wire 1 e$ d1 $end
$var wire 1 f$ not_sel $end
$var wire 1 g$ sel $end
$var wire 1 h$ y_mux $end
$upscope $end
$upscope $end
$upscope $end
$scope begin shift_logic[8] $end
$var parameter 5 i$ i $end
$scope begin genblk1 $end
$scope module u_mux $end
$var wire 1 j$ and0 $end
$var wire 1 k$ and1 $end
$var wire 1 l$ d0 $end
$var wire 1 m$ d1 $end
$var wire 1 n$ not_sel $end
$var wire 1 o$ sel $end
$var wire 1 p$ y_mux $end
$upscope $end
$upscope $end
$upscope $end
$scope begin shift_logic[9] $end
$var parameter 5 q$ i $end
$scope begin genblk1 $end
$scope module u_mux $end
$var wire 1 r$ and0 $end
$var wire 1 s$ and1 $end
$var wire 1 t$ d0 $end
$var wire 1 u$ d1 $end
$var wire 1 v$ not_sel $end
$var wire 1 w$ sel $end
$var wire 1 x$ y_mux $end
$upscope $end
$upscope $end
$upscope $end
$scope begin shift_logic[10] $end
$var parameter 5 y$ i $end
$scope begin genblk1 $end
$scope module u_mux $end
$var wire 1 z$ and0 $end
$var wire 1 {$ and1 $end
$var wire 1 |$ d0 $end
$var wire 1 }$ d1 $end
$var wire 1 ~$ not_sel $end
$var wire 1 !% sel $end
$var wire 1 "% y_mux $end
$upscope $end
$upscope $end
$upscope $end
$scope begin shift_logic[11] $end
$var parameter 5 #% i $end
$scope begin genblk1 $end
$scope module u_mux $end
$var wire 1 $% and0 $end
$var wire 1 %% and1 $end
$var wire 1 &% d0 $end
$var wire 1 '% d1 $end
$var wire 1 (% not_sel $end
$var wire 1 )% sel $end
$var wire 1 *% y_mux $end
$upscope $end
$upscope $end
$upscope $end
$scope begin shift_logic[12] $end
$var parameter 5 +% i $end
$scope begin genblk1 $end
$scope module u_mux $end
$var wire 1 ,% and0 $end
$var wire 1 -% and1 $end
$var wire 1 .% d0 $end
$var wire 1 /% d1 $end
$var wire 1 0% not_sel $end
$var wire 1 1% sel $end
$var wire 1 2% y_mux $end
$upscope $end
$upscope $end
$upscope $end
$scope begin shift_logic[13] $end
$var parameter 5 3% i $end
$scope begin genblk1 $end
$scope module u_mux $end
$var wire 1 4% and0 $end
$var wire 1 5% and1 $end
$var wire 1 6% d0 $end
$var wire 1 7% d1 $end
$var wire 1 8% not_sel $end
$var wire 1 9% sel $end
$var wire 1 :% y_mux $end
$upscope $end
$upscope $end
$upscope $end
$scope begin shift_logic[14] $end
$var parameter 5 ;% i $end
$scope begin genblk1 $end
$scope module u_mux $end
$var wire 1 <% and0 $end
$var wire 1 =% and1 $end
$var wire 1 >% d0 $end
$var wire 1 ?% d1 $end
$var wire 1 @% not_sel $end
$var wire 1 A% sel $end
$var wire 1 B% y_mux $end
$upscope $end
$upscope $end
$upscope $end
$scope begin shift_logic[15] $end
$var parameter 5 C% i $end
$scope begin genblk1 $end
$scope module u_mux_u $end
$var wire 1 D% and0 $end
$var wire 1 E% and1 $end
$var wire 1 F% d0 $end
$var wire 1 G% d1 $end
$var wire 1 H% not_sel $end
$var wire 1 I% sel $end
$var wire 1 J% y_mux $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module shift03 $end
$var wire 16 K% data_out [15:0] $end
$var wire 16 L% data_in [15:0] $end
$scope begin shift_logic[0] $end
$var parameter 2 M% i $end
$scope begin genblk1 $end
$scope module u_mux $end
$var wire 1 N% and0 $end
$var wire 1 O% and1 $end
$var wire 1 P% d0 $end
$var wire 1 Q% d1 $end
$var wire 1 R% not_sel $end
$var wire 1 S% sel $end
$var wire 1 T% y_mux $end
$upscope $end
$upscope $end
$upscope $end
$scope begin shift_logic[1] $end
$var parameter 2 U% i $end
$scope begin genblk1 $end
$scope module u_mux $end
$var wire 1 V% and0 $end
$var wire 1 W% and1 $end
$var wire 1 X% d0 $end
$var wire 1 Y% d1 $end
$var wire 1 Z% not_sel $end
$var wire 1 [% sel $end
$var wire 1 \% y_mux $end
$upscope $end
$upscope $end
$upscope $end
$scope begin shift_logic[2] $end
$var parameter 3 ]% i $end
$scope begin genblk1 $end
$scope module u_mux $end
$var wire 1 ^% and0 $end
$var wire 1 _% and1 $end
$var wire 1 `% d0 $end
$var wire 1 a% d1 $end
$var wire 1 b% not_sel $end
$var wire 1 c% sel $end
$var wire 1 d% y_mux $end
$upscope $end
$upscope $end
$upscope $end
$scope begin shift_logic[3] $end
$var parameter 3 e% i $end
$scope begin genblk1 $end
$scope module u_mux $end
$var wire 1 f% and0 $end
$var wire 1 g% and1 $end
$var wire 1 h% d0 $end
$var wire 1 i% d1 $end
$var wire 1 j% not_sel $end
$var wire 1 k% sel $end
$var wire 1 l% y_mux $end
$upscope $end
$upscope $end
$upscope $end
$scope begin shift_logic[4] $end
$var parameter 4 m% i $end
$scope begin genblk1 $end
$scope module u_mux $end
$var wire 1 n% and0 $end
$var wire 1 o% and1 $end
$var wire 1 p% d0 $end
$var wire 1 q% d1 $end
$var wire 1 r% not_sel $end
$var wire 1 s% sel $end
$var wire 1 t% y_mux $end
$upscope $end
$upscope $end
$upscope $end
$scope begin shift_logic[5] $end
$var parameter 4 u% i $end
$scope begin genblk1 $end
$scope module u_mux $end
$var wire 1 v% and0 $end
$var wire 1 w% and1 $end
$var wire 1 x% d0 $end
$var wire 1 y% d1 $end
$var wire 1 z% not_sel $end
$var wire 1 {% sel $end
$var wire 1 |% y_mux $end
$upscope $end
$upscope $end
$upscope $end
$scope begin shift_logic[6] $end
$var parameter 4 }% i $end
$scope begin genblk1 $end
$scope module u_mux $end
$var wire 1 ~% and0 $end
$var wire 1 !& and1 $end
$var wire 1 "& d0 $end
$var wire 1 #& d1 $end
$var wire 1 $& not_sel $end
$var wire 1 %& sel $end
$var wire 1 && y_mux $end
$upscope $end
$upscope $end
$upscope $end
$scope begin shift_logic[7] $end
$var parameter 4 '& i $end
$scope begin genblk1 $end
$scope module u_mux $end
$var wire 1 (& and0 $end
$var wire 1 )& and1 $end
$var wire 1 *& d0 $end
$var wire 1 +& d1 $end
$var wire 1 ,& not_sel $end
$var wire 1 -& sel $end
$var wire 1 .& y_mux $end
$upscope $end
$upscope $end
$upscope $end
$scope begin shift_logic[8] $end
$var parameter 5 /& i $end
$scope begin genblk1 $end
$scope module u_mux $end
$var wire 1 0& and0 $end
$var wire 1 1& and1 $end
$var wire 1 2& d0 $end
$var wire 1 3& d1 $end
$var wire 1 4& not_sel $end
$var wire 1 5& sel $end
$var wire 1 6& y_mux $end
$upscope $end
$upscope $end
$upscope $end
$scope begin shift_logic[9] $end
$var parameter 5 7& i $end
$scope begin genblk1 $end
$scope module u_mux $end
$var wire 1 8& and0 $end
$var wire 1 9& and1 $end
$var wire 1 :& d0 $end
$var wire 1 ;& d1 $end
$var wire 1 <& not_sel $end
$var wire 1 =& sel $end
$var wire 1 >& y_mux $end
$upscope $end
$upscope $end
$upscope $end
$scope begin shift_logic[10] $end
$var parameter 5 ?& i $end
$scope begin genblk1 $end
$scope module u_mux $end
$var wire 1 @& and0 $end
$var wire 1 A& and1 $end
$var wire 1 B& d0 $end
$var wire 1 C& d1 $end
$var wire 1 D& not_sel $end
$var wire 1 E& sel $end
$var wire 1 F& y_mux $end
$upscope $end
$upscope $end
$upscope $end
$scope begin shift_logic[11] $end
$var parameter 5 G& i $end
$scope begin genblk1 $end
$scope module u_mux $end
$var wire 1 H& and0 $end
$var wire 1 I& and1 $end
$var wire 1 J& d0 $end
$var wire 1 K& d1 $end
$var wire 1 L& not_sel $end
$var wire 1 M& sel $end
$var wire 1 N& y_mux $end
$upscope $end
$upscope $end
$upscope $end
$scope begin shift_logic[12] $end
$var parameter 5 O& i $end
$scope begin genblk1 $end
$scope module u_mux $end
$var wire 1 P& and0 $end
$var wire 1 Q& and1 $end
$var wire 1 R& d0 $end
$var wire 1 S& d1 $end
$var wire 1 T& not_sel $end
$var wire 1 U& sel $end
$var wire 1 V& y_mux $end
$upscope $end
$upscope $end
$upscope $end
$scope begin shift_logic[13] $end
$var parameter 5 W& i $end
$scope begin genblk1 $end
$scope module u_mux $end
$var wire 1 X& and0 $end
$var wire 1 Y& and1 $end
$var wire 1 Z& d0 $end
$var wire 1 [& d1 $end
$var wire 1 \& not_sel $end
$var wire 1 ]& sel $end
$var wire 1 ^& y_mux $end
$upscope $end
$upscope $end
$upscope $end
$scope begin shift_logic[14] $end
$var parameter 5 _& i $end
$scope begin genblk1 $end
$scope module u_mux $end
$var wire 1 `& and0 $end
$var wire 1 a& and1 $end
$var wire 1 b& d0 $end
$var wire 1 c& d1 $end
$var wire 1 d& not_sel $end
$var wire 1 e& sel $end
$var wire 1 f& y_mux $end
$upscope $end
$upscope $end
$upscope $end
$scope begin shift_logic[15] $end
$var parameter 5 g& i $end
$scope begin genblk1 $end
$scope module u_mux_u $end
$var wire 1 h& and0 $end
$var wire 1 i& and1 $end
$var wire 1 j& d0 $end
$var wire 1 k& d1 $end
$var wire 1 l& not_sel $end
$var wire 1 m& sel $end
$var wire 1 n& y_mux $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module shift04 $end
$var wire 16 o& data_in [15:0] $end
$var wire 16 p& data_out [15:0] $end
$scope begin shift_logic[0] $end
$var parameter 2 q& i $end
$scope begin genblk1 $end
$scope module u_mux $end
$var wire 1 r& and0 $end
$var wire 1 s& and1 $end
$var wire 1 t& d0 $end
$var wire 1 u& d1 $end
$var wire 1 v& not_sel $end
$var wire 1 w& sel $end
$var wire 1 x& y_mux $end
$upscope $end
$upscope $end
$upscope $end
$scope begin shift_logic[1] $end
$var parameter 2 y& i $end
$scope begin genblk1 $end
$scope module u_mux $end
$var wire 1 z& and0 $end
$var wire 1 {& and1 $end
$var wire 1 |& d0 $end
$var wire 1 }& d1 $end
$var wire 1 ~& not_sel $end
$var wire 1 !' sel $end
$var wire 1 "' y_mux $end
$upscope $end
$upscope $end
$upscope $end
$scope begin shift_logic[2] $end
$var parameter 3 #' i $end
$scope begin genblk1 $end
$scope module u_mux $end
$var wire 1 $' and0 $end
$var wire 1 %' and1 $end
$var wire 1 &' d0 $end
$var wire 1 '' d1 $end
$var wire 1 (' not_sel $end
$var wire 1 )' sel $end
$var wire 1 *' y_mux $end
$upscope $end
$upscope $end
$upscope $end
$scope begin shift_logic[3] $end
$var parameter 3 +' i $end
$scope begin genblk1 $end
$scope module u_mux $end
$var wire 1 ,' and0 $end
$var wire 1 -' and1 $end
$var wire 1 .' d0 $end
$var wire 1 /' d1 $end
$var wire 1 0' not_sel $end
$var wire 1 1' sel $end
$var wire 1 2' y_mux $end
$upscope $end
$upscope $end
$upscope $end
$scope begin shift_logic[4] $end
$var parameter 4 3' i $end
$scope begin genblk1 $end
$scope module u_mux $end
$var wire 1 4' and0 $end
$var wire 1 5' and1 $end
$var wire 1 6' d0 $end
$var wire 1 7' d1 $end
$var wire 1 8' not_sel $end
$var wire 1 9' sel $end
$var wire 1 :' y_mux $end
$upscope $end
$upscope $end
$upscope $end
$scope begin shift_logic[5] $end
$var parameter 4 ;' i $end
$scope begin genblk1 $end
$scope module u_mux $end
$var wire 1 <' and0 $end
$var wire 1 =' and1 $end
$var wire 1 >' d0 $end
$var wire 1 ?' d1 $end
$var wire 1 @' not_sel $end
$var wire 1 A' sel $end
$var wire 1 B' y_mux $end
$upscope $end
$upscope $end
$upscope $end
$scope begin shift_logic[6] $end
$var parameter 4 C' i $end
$scope begin genblk1 $end
$scope module u_mux $end
$var wire 1 D' and0 $end
$var wire 1 E' and1 $end
$var wire 1 F' d0 $end
$var wire 1 G' d1 $end
$var wire 1 H' not_sel $end
$var wire 1 I' sel $end
$var wire 1 J' y_mux $end
$upscope $end
$upscope $end
$upscope $end
$scope begin shift_logic[7] $end
$var parameter 4 K' i $end
$scope begin genblk1 $end
$scope module u_mux $end
$var wire 1 L' and0 $end
$var wire 1 M' and1 $end
$var wire 1 N' d0 $end
$var wire 1 O' d1 $end
$var wire 1 P' not_sel $end
$var wire 1 Q' sel $end
$var wire 1 R' y_mux $end
$upscope $end
$upscope $end
$upscope $end
$scope begin shift_logic[8] $end
$var parameter 5 S' i $end
$scope begin genblk1 $end
$scope module u_mux $end
$var wire 1 T' and0 $end
$var wire 1 U' and1 $end
$var wire 1 V' d0 $end
$var wire 1 W' d1 $end
$var wire 1 X' not_sel $end
$var wire 1 Y' sel $end
$var wire 1 Z' y_mux $end
$upscope $end
$upscope $end
$upscope $end
$scope begin shift_logic[9] $end
$var parameter 5 [' i $end
$scope begin genblk1 $end
$scope module u_mux $end
$var wire 1 \' and0 $end
$var wire 1 ]' and1 $end
$var wire 1 ^' d0 $end
$var wire 1 _' d1 $end
$var wire 1 `' not_sel $end
$var wire 1 a' sel $end
$var wire 1 b' y_mux $end
$upscope $end
$upscope $end
$upscope $end
$scope begin shift_logic[10] $end
$var parameter 5 c' i $end
$scope begin genblk1 $end
$scope module u_mux $end
$var wire 1 d' and0 $end
$var wire 1 e' and1 $end
$var wire 1 f' d0 $end
$var wire 1 g' d1 $end
$var wire 1 h' not_sel $end
$var wire 1 i' sel $end
$var wire 1 j' y_mux $end
$upscope $end
$upscope $end
$upscope $end
$scope begin shift_logic[11] $end
$var parameter 5 k' i $end
$scope begin genblk1 $end
$scope module u_mux $end
$var wire 1 l' and0 $end
$var wire 1 m' and1 $end
$var wire 1 n' d0 $end
$var wire 1 o' d1 $end
$var wire 1 p' not_sel $end
$var wire 1 q' sel $end
$var wire 1 r' y_mux $end
$upscope $end
$upscope $end
$upscope $end
$scope begin shift_logic[12] $end
$var parameter 5 s' i $end
$scope begin genblk1 $end
$scope module u_mux $end
$var wire 1 t' and0 $end
$var wire 1 u' and1 $end
$var wire 1 v' d0 $end
$var wire 1 w' d1 $end
$var wire 1 x' not_sel $end
$var wire 1 y' sel $end
$var wire 1 z' y_mux $end
$upscope $end
$upscope $end
$upscope $end
$scope begin shift_logic[13] $end
$var parameter 5 {' i $end
$scope begin genblk1 $end
$scope module u_mux $end
$var wire 1 |' and0 $end
$var wire 1 }' and1 $end
$var wire 1 ~' d0 $end
$var wire 1 !( d1 $end
$var wire 1 "( not_sel $end
$var wire 1 #( sel $end
$var wire 1 $( y_mux $end
$upscope $end
$upscope $end
$upscope $end
$scope begin shift_logic[14] $end
$var parameter 5 %( i $end
$scope begin genblk1 $end
$scope module u_mux $end
$var wire 1 &( and0 $end
$var wire 1 '( and1 $end
$var wire 1 (( d0 $end
$var wire 1 )( d1 $end
$var wire 1 *( not_sel $end
$var wire 1 +( sel $end
$var wire 1 ,( y_mux $end
$upscope $end
$upscope $end
$upscope $end
$scope begin shift_logic[15] $end
$var parameter 5 -( i $end
$scope begin genblk1 $end
$scope module u_mux_u $end
$var wire 1 .( and0 $end
$var wire 1 /( and1 $end
$var wire 1 0( d0 $end
$var wire 1 1( d1 $end
$var wire 1 2( not_sel $end
$var wire 1 3( sel $end
$var wire 1 4( y_mux $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module shift05 $end
$var wire 16 5( data_in [15:0] $end
$var wire 16 6( data_out [15:0] $end
$scope begin shift_logic[0] $end
$var parameter 2 7( i $end
$scope begin genblk1 $end
$scope module u_mux $end
$var wire 1 8( and0 $end
$var wire 1 9( and1 $end
$var wire 1 :( d0 $end
$var wire 1 ;( d1 $end
$var wire 1 <( not_sel $end
$var wire 1 =( sel $end
$var wire 1 >( y_mux $end
$upscope $end
$upscope $end
$upscope $end
$scope begin shift_logic[1] $end
$var parameter 2 ?( i $end
$scope begin genblk1 $end
$scope module u_mux $end
$var wire 1 @( and0 $end
$var wire 1 A( and1 $end
$var wire 1 B( d0 $end
$var wire 1 C( d1 $end
$var wire 1 D( not_sel $end
$var wire 1 E( sel $end
$var wire 1 F( y_mux $end
$upscope $end
$upscope $end
$upscope $end
$scope begin shift_logic[2] $end
$var parameter 3 G( i $end
$scope begin genblk1 $end
$scope module u_mux $end
$var wire 1 H( and0 $end
$var wire 1 I( and1 $end
$var wire 1 J( d0 $end
$var wire 1 K( d1 $end
$var wire 1 L( not_sel $end
$var wire 1 M( sel $end
$var wire 1 N( y_mux $end
$upscope $end
$upscope $end
$upscope $end
$scope begin shift_logic[3] $end
$var parameter 3 O( i $end
$scope begin genblk1 $end
$scope module u_mux $end
$var wire 1 P( and0 $end
$var wire 1 Q( and1 $end
$var wire 1 R( d0 $end
$var wire 1 S( d1 $end
$var wire 1 T( not_sel $end
$var wire 1 U( sel $end
$var wire 1 V( y_mux $end
$upscope $end
$upscope $end
$upscope $end
$scope begin shift_logic[4] $end
$var parameter 4 W( i $end
$scope begin genblk1 $end
$scope module u_mux $end
$var wire 1 X( and0 $end
$var wire 1 Y( and1 $end
$var wire 1 Z( d0 $end
$var wire 1 [( d1 $end
$var wire 1 \( not_sel $end
$var wire 1 ]( sel $end
$var wire 1 ^( y_mux $end
$upscope $end
$upscope $end
$upscope $end
$scope begin shift_logic[5] $end
$var parameter 4 _( i $end
$scope begin genblk1 $end
$scope module u_mux $end
$var wire 1 `( and0 $end
$var wire 1 a( and1 $end
$var wire 1 b( d0 $end
$var wire 1 c( d1 $end
$var wire 1 d( not_sel $end
$var wire 1 e( sel $end
$var wire 1 f( y_mux $end
$upscope $end
$upscope $end
$upscope $end
$scope begin shift_logic[6] $end
$var parameter 4 g( i $end
$scope begin genblk1 $end
$scope module u_mux $end
$var wire 1 h( and0 $end
$var wire 1 i( and1 $end
$var wire 1 j( d0 $end
$var wire 1 k( d1 $end
$var wire 1 l( not_sel $end
$var wire 1 m( sel $end
$var wire 1 n( y_mux $end
$upscope $end
$upscope $end
$upscope $end
$scope begin shift_logic[7] $end
$var parameter 4 o( i $end
$scope begin genblk1 $end
$scope module u_mux $end
$var wire 1 p( and0 $end
$var wire 1 q( and1 $end
$var wire 1 r( d0 $end
$var wire 1 s( d1 $end
$var wire 1 t( not_sel $end
$var wire 1 u( sel $end
$var wire 1 v( y_mux $end
$upscope $end
$upscope $end
$upscope $end
$scope begin shift_logic[8] $end
$var parameter 5 w( i $end
$scope begin genblk1 $end
$scope module u_mux $end
$var wire 1 x( and0 $end
$var wire 1 y( and1 $end
$var wire 1 z( d0 $end
$var wire 1 {( d1 $end
$var wire 1 |( not_sel $end
$var wire 1 }( sel $end
$var wire 1 ~( y_mux $end
$upscope $end
$upscope $end
$upscope $end
$scope begin shift_logic[9] $end
$var parameter 5 !) i $end
$scope begin genblk1 $end
$scope module u_mux $end
$var wire 1 ") and0 $end
$var wire 1 #) and1 $end
$var wire 1 $) d0 $end
$var wire 1 %) d1 $end
$var wire 1 &) not_sel $end
$var wire 1 ') sel $end
$var wire 1 () y_mux $end
$upscope $end
$upscope $end
$upscope $end
$scope begin shift_logic[10] $end
$var parameter 5 )) i $end
$scope begin genblk1 $end
$scope module u_mux $end
$var wire 1 *) and0 $end
$var wire 1 +) and1 $end
$var wire 1 ,) d0 $end
$var wire 1 -) d1 $end
$var wire 1 .) not_sel $end
$var wire 1 /) sel $end
$var wire 1 0) y_mux $end
$upscope $end
$upscope $end
$upscope $end
$scope begin shift_logic[11] $end
$var parameter 5 1) i $end
$scope begin genblk1 $end
$scope module u_mux $end
$var wire 1 2) and0 $end
$var wire 1 3) and1 $end
$var wire 1 4) d0 $end
$var wire 1 5) d1 $end
$var wire 1 6) not_sel $end
$var wire 1 7) sel $end
$var wire 1 8) y_mux $end
$upscope $end
$upscope $end
$upscope $end
$scope begin shift_logic[12] $end
$var parameter 5 9) i $end
$scope begin genblk1 $end
$scope module u_mux $end
$var wire 1 :) and0 $end
$var wire 1 ;) and1 $end
$var wire 1 <) d0 $end
$var wire 1 =) d1 $end
$var wire 1 >) not_sel $end
$var wire 1 ?) sel $end
$var wire 1 @) y_mux $end
$upscope $end
$upscope $end
$upscope $end
$scope begin shift_logic[13] $end
$var parameter 5 A) i $end
$scope begin genblk1 $end
$scope module u_mux $end
$var wire 1 B) and0 $end
$var wire 1 C) and1 $end
$var wire 1 D) d0 $end
$var wire 1 E) d1 $end
$var wire 1 F) not_sel $end
$var wire 1 G) sel $end
$var wire 1 H) y_mux $end
$upscope $end
$upscope $end
$upscope $end
$scope begin shift_logic[14] $end
$var parameter 5 I) i $end
$scope begin genblk1 $end
$scope module u_mux $end
$var wire 1 J) and0 $end
$var wire 1 K) and1 $end
$var wire 1 L) d0 $end
$var wire 1 M) d1 $end
$var wire 1 N) not_sel $end
$var wire 1 O) sel $end
$var wire 1 P) y_mux $end
$upscope $end
$upscope $end
$upscope $end
$scope begin shift_logic[15] $end
$var parameter 5 Q) i $end
$scope begin genblk1 $end
$scope module u_mux_u $end
$var wire 1 R) and0 $end
$var wire 1 S) and1 $end
$var wire 1 T) d0 $end
$var wire 1 U) d1 $end
$var wire 1 V) not_sel $end
$var wire 1 W) sel $end
$var wire 1 X) y_mux $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module shift06 $end
$var wire 16 Y) data_in [15:0] $end
$var wire 16 Z) data_out [15:0] $end
$scope begin shift_logic[0] $end
$var parameter 2 [) i $end
$scope begin genblk1 $end
$scope module u_mux $end
$var wire 1 \) and0 $end
$var wire 1 ]) and1 $end
$var wire 1 ^) d0 $end
$var wire 1 _) d1 $end
$var wire 1 `) not_sel $end
$var wire 1 a) sel $end
$var wire 1 b) y_mux $end
$upscope $end
$upscope $end
$upscope $end
$scope begin shift_logic[1] $end
$var parameter 2 c) i $end
$scope begin genblk1 $end
$scope module u_mux $end
$var wire 1 d) and0 $end
$var wire 1 e) and1 $end
$var wire 1 f) d0 $end
$var wire 1 g) d1 $end
$var wire 1 h) not_sel $end
$var wire 1 i) sel $end
$var wire 1 j) y_mux $end
$upscope $end
$upscope $end
$upscope $end
$scope begin shift_logic[2] $end
$var parameter 3 k) i $end
$scope begin genblk1 $end
$scope module u_mux $end
$var wire 1 l) and0 $end
$var wire 1 m) and1 $end
$var wire 1 n) d0 $end
$var wire 1 o) d1 $end
$var wire 1 p) not_sel $end
$var wire 1 q) sel $end
$var wire 1 r) y_mux $end
$upscope $end
$upscope $end
$upscope $end
$scope begin shift_logic[3] $end
$var parameter 3 s) i $end
$scope begin genblk1 $end
$scope module u_mux $end
$var wire 1 t) and0 $end
$var wire 1 u) and1 $end
$var wire 1 v) d0 $end
$var wire 1 w) d1 $end
$var wire 1 x) not_sel $end
$var wire 1 y) sel $end
$var wire 1 z) y_mux $end
$upscope $end
$upscope $end
$upscope $end
$scope begin shift_logic[4] $end
$var parameter 4 {) i $end
$scope begin genblk1 $end
$scope module u_mux $end
$var wire 1 |) and0 $end
$var wire 1 }) and1 $end
$var wire 1 ~) d0 $end
$var wire 1 !* d1 $end
$var wire 1 "* not_sel $end
$var wire 1 #* sel $end
$var wire 1 $* y_mux $end
$upscope $end
$upscope $end
$upscope $end
$scope begin shift_logic[5] $end
$var parameter 4 %* i $end
$scope begin genblk1 $end
$scope module u_mux $end
$var wire 1 &* and0 $end
$var wire 1 '* and1 $end
$var wire 1 (* d0 $end
$var wire 1 )* d1 $end
$var wire 1 ** not_sel $end
$var wire 1 +* sel $end
$var wire 1 ,* y_mux $end
$upscope $end
$upscope $end
$upscope $end
$scope begin shift_logic[6] $end
$var parameter 4 -* i $end
$scope begin genblk1 $end
$scope module u_mux $end
$var wire 1 .* and0 $end
$var wire 1 /* and1 $end
$var wire 1 0* d0 $end
$var wire 1 1* d1 $end
$var wire 1 2* not_sel $end
$var wire 1 3* sel $end
$var wire 1 4* y_mux $end
$upscope $end
$upscope $end
$upscope $end
$scope begin shift_logic[7] $end
$var parameter 4 5* i $end
$scope begin genblk1 $end
$scope module u_mux $end
$var wire 1 6* and0 $end
$var wire 1 7* and1 $end
$var wire 1 8* d0 $end
$var wire 1 9* d1 $end
$var wire 1 :* not_sel $end
$var wire 1 ;* sel $end
$var wire 1 <* y_mux $end
$upscope $end
$upscope $end
$upscope $end
$scope begin shift_logic[8] $end
$var parameter 5 =* i $end
$scope begin genblk1 $end
$scope module u_mux $end
$var wire 1 >* and0 $end
$var wire 1 ?* and1 $end
$var wire 1 @* d0 $end
$var wire 1 A* d1 $end
$var wire 1 B* not_sel $end
$var wire 1 C* sel $end
$var wire 1 D* y_mux $end
$upscope $end
$upscope $end
$upscope $end
$scope begin shift_logic[9] $end
$var parameter 5 E* i $end
$scope begin genblk1 $end
$scope module u_mux $end
$var wire 1 F* and0 $end
$var wire 1 G* and1 $end
$var wire 1 H* d0 $end
$var wire 1 I* d1 $end
$var wire 1 J* not_sel $end
$var wire 1 K* sel $end
$var wire 1 L* y_mux $end
$upscope $end
$upscope $end
$upscope $end
$scope begin shift_logic[10] $end
$var parameter 5 M* i $end
$scope begin genblk1 $end
$scope module u_mux $end
$var wire 1 N* and0 $end
$var wire 1 O* and1 $end
$var wire 1 P* d0 $end
$var wire 1 Q* d1 $end
$var wire 1 R* not_sel $end
$var wire 1 S* sel $end
$var wire 1 T* y_mux $end
$upscope $end
$upscope $end
$upscope $end
$scope begin shift_logic[11] $end
$var parameter 5 U* i $end
$scope begin genblk1 $end
$scope module u_mux $end
$var wire 1 V* and0 $end
$var wire 1 W* and1 $end
$var wire 1 X* d0 $end
$var wire 1 Y* d1 $end
$var wire 1 Z* not_sel $end
$var wire 1 [* sel $end
$var wire 1 \* y_mux $end
$upscope $end
$upscope $end
$upscope $end
$scope begin shift_logic[12] $end
$var parameter 5 ]* i $end
$scope begin genblk1 $end
$scope module u_mux $end
$var wire 1 ^* and0 $end
$var wire 1 _* and1 $end
$var wire 1 `* d0 $end
$var wire 1 a* d1 $end
$var wire 1 b* not_sel $end
$var wire 1 c* sel $end
$var wire 1 d* y_mux $end
$upscope $end
$upscope $end
$upscope $end
$scope begin shift_logic[13] $end
$var parameter 5 e* i $end
$scope begin genblk1 $end
$scope module u_mux $end
$var wire 1 f* and0 $end
$var wire 1 g* and1 $end
$var wire 1 h* d0 $end
$var wire 1 i* d1 $end
$var wire 1 j* not_sel $end
$var wire 1 k* sel $end
$var wire 1 l* y_mux $end
$upscope $end
$upscope $end
$upscope $end
$scope begin shift_logic[14] $end
$var parameter 5 m* i $end
$scope begin genblk1 $end
$scope module u_mux $end
$var wire 1 n* and0 $end
$var wire 1 o* and1 $end
$var wire 1 p* d0 $end
$var wire 1 q* d1 $end
$var wire 1 r* not_sel $end
$var wire 1 s* sel $end
$var wire 1 t* y_mux $end
$upscope $end
$upscope $end
$upscope $end
$scope begin shift_logic[15] $end
$var parameter 5 u* i $end
$scope begin genblk1 $end
$scope module u_mux_u $end
$var wire 1 v* and0 $end
$var wire 1 w* and1 $end
$var wire 1 x* d0 $end
$var wire 1 y* d1 $end
$var wire 1 z* not_sel $end
$var wire 1 {* sel $end
$var wire 1 |* y_mux $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module shiftmux1 $end
$var wire 16 }* mux_a [15:0] $end
$var wire 16 ~* mux_b [15:0] $end
$var wire 1 !+ mux_sel $end
$var wire 16 "+ mux_y [15:0] $end
$scope begin bit_mux[0] $end
$var parameter 2 #+ i $end
$scope module u_mux $end
$var wire 1 $+ and0 $end
$var wire 1 %+ and1 $end
$var wire 1 &+ d0 $end
$var wire 1 '+ d1 $end
$var wire 1 (+ not_sel $end
$var wire 1 !+ sel $end
$var wire 1 )+ y_mux $end
$upscope $end
$upscope $end
$scope begin bit_mux[1] $end
$var parameter 2 *+ i $end
$scope module u_mux $end
$var wire 1 ++ and0 $end
$var wire 1 ,+ and1 $end
$var wire 1 -+ d0 $end
$var wire 1 .+ d1 $end
$var wire 1 /+ not_sel $end
$var wire 1 !+ sel $end
$var wire 1 0+ y_mux $end
$upscope $end
$upscope $end
$scope begin bit_mux[2] $end
$var parameter 3 1+ i $end
$scope module u_mux $end
$var wire 1 2+ and0 $end
$var wire 1 3+ and1 $end
$var wire 1 4+ d0 $end
$var wire 1 5+ d1 $end
$var wire 1 6+ not_sel $end
$var wire 1 !+ sel $end
$var wire 1 7+ y_mux $end
$upscope $end
$upscope $end
$scope begin bit_mux[3] $end
$var parameter 3 8+ i $end
$scope module u_mux $end
$var wire 1 9+ and0 $end
$var wire 1 :+ and1 $end
$var wire 1 ;+ d0 $end
$var wire 1 <+ d1 $end
$var wire 1 =+ not_sel $end
$var wire 1 !+ sel $end
$var wire 1 >+ y_mux $end
$upscope $end
$upscope $end
$scope begin bit_mux[4] $end
$var parameter 4 ?+ i $end
$scope module u_mux $end
$var wire 1 @+ and0 $end
$var wire 1 A+ and1 $end
$var wire 1 B+ d0 $end
$var wire 1 C+ d1 $end
$var wire 1 D+ not_sel $end
$var wire 1 !+ sel $end
$var wire 1 E+ y_mux $end
$upscope $end
$upscope $end
$scope begin bit_mux[5] $end
$var parameter 4 F+ i $end
$scope module u_mux $end
$var wire 1 G+ and0 $end
$var wire 1 H+ and1 $end
$var wire 1 I+ d0 $end
$var wire 1 J+ d1 $end
$var wire 1 K+ not_sel $end
$var wire 1 !+ sel $end
$var wire 1 L+ y_mux $end
$upscope $end
$upscope $end
$scope begin bit_mux[6] $end
$var parameter 4 M+ i $end
$scope module u_mux $end
$var wire 1 N+ and0 $end
$var wire 1 O+ and1 $end
$var wire 1 P+ d0 $end
$var wire 1 Q+ d1 $end
$var wire 1 R+ not_sel $end
$var wire 1 !+ sel $end
$var wire 1 S+ y_mux $end
$upscope $end
$upscope $end
$scope begin bit_mux[7] $end
$var parameter 4 T+ i $end
$scope module u_mux $end
$var wire 1 U+ and0 $end
$var wire 1 V+ and1 $end
$var wire 1 W+ d0 $end
$var wire 1 X+ d1 $end
$var wire 1 Y+ not_sel $end
$var wire 1 !+ sel $end
$var wire 1 Z+ y_mux $end
$upscope $end
$upscope $end
$scope begin bit_mux[8] $end
$var parameter 5 [+ i $end
$scope module u_mux $end
$var wire 1 \+ and0 $end
$var wire 1 ]+ and1 $end
$var wire 1 ^+ d0 $end
$var wire 1 _+ d1 $end
$var wire 1 `+ not_sel $end
$var wire 1 !+ sel $end
$var wire 1 a+ y_mux $end
$upscope $end
$upscope $end
$scope begin bit_mux[9] $end
$var parameter 5 b+ i $end
$scope module u_mux $end
$var wire 1 c+ and0 $end
$var wire 1 d+ and1 $end
$var wire 1 e+ d0 $end
$var wire 1 f+ d1 $end
$var wire 1 g+ not_sel $end
$var wire 1 !+ sel $end
$var wire 1 h+ y_mux $end
$upscope $end
$upscope $end
$scope begin bit_mux[10] $end
$var parameter 5 i+ i $end
$scope module u_mux $end
$var wire 1 j+ and0 $end
$var wire 1 k+ and1 $end
$var wire 1 l+ d0 $end
$var wire 1 m+ d1 $end
$var wire 1 n+ not_sel $end
$var wire 1 !+ sel $end
$var wire 1 o+ y_mux $end
$upscope $end
$upscope $end
$scope begin bit_mux[11] $end
$var parameter 5 p+ i $end
$scope module u_mux $end
$var wire 1 q+ and0 $end
$var wire 1 r+ and1 $end
$var wire 1 s+ d0 $end
$var wire 1 t+ d1 $end
$var wire 1 u+ not_sel $end
$var wire 1 !+ sel $end
$var wire 1 v+ y_mux $end
$upscope $end
$upscope $end
$scope begin bit_mux[12] $end
$var parameter 5 w+ i $end
$scope module u_mux $end
$var wire 1 x+ and0 $end
$var wire 1 y+ and1 $end
$var wire 1 z+ d0 $end
$var wire 1 {+ d1 $end
$var wire 1 |+ not_sel $end
$var wire 1 !+ sel $end
$var wire 1 }+ y_mux $end
$upscope $end
$upscope $end
$scope begin bit_mux[13] $end
$var parameter 5 ~+ i $end
$scope module u_mux $end
$var wire 1 !, and0 $end
$var wire 1 ", and1 $end
$var wire 1 #, d0 $end
$var wire 1 $, d1 $end
$var wire 1 %, not_sel $end
$var wire 1 !+ sel $end
$var wire 1 &, y_mux $end
$upscope $end
$upscope $end
$scope begin bit_mux[14] $end
$var parameter 5 ', i $end
$scope module u_mux $end
$var wire 1 (, and0 $end
$var wire 1 ), and1 $end
$var wire 1 *, d0 $end
$var wire 1 +, d1 $end
$var wire 1 ,, not_sel $end
$var wire 1 !+ sel $end
$var wire 1 -, y_mux $end
$upscope $end
$upscope $end
$scope begin bit_mux[15] $end
$var parameter 5 ., i $end
$scope module u_mux $end
$var wire 1 /, and0 $end
$var wire 1 0, and1 $end
$var wire 1 1, d0 $end
$var wire 1 2, d1 $end
$var wire 1 3, not_sel $end
$var wire 1 !+ sel $end
$var wire 1 4, y_mux $end
$upscope $end
$upscope $end
$upscope $end
$scope module shiftmux2 $end
$var wire 16 5, mux_a [15:0] $end
$var wire 16 6, mux_b [15:0] $end
$var wire 1 7, mux_sel $end
$var wire 16 8, mux_y [15:0] $end
$scope begin bit_mux[0] $end
$var parameter 2 9, i $end
$scope module u_mux $end
$var wire 1 :, and0 $end
$var wire 1 ;, and1 $end
$var wire 1 <, d0 $end
$var wire 1 =, d1 $end
$var wire 1 >, not_sel $end
$var wire 1 7, sel $end
$var wire 1 ?, y_mux $end
$upscope $end
$upscope $end
$scope begin bit_mux[1] $end
$var parameter 2 @, i $end
$scope module u_mux $end
$var wire 1 A, and0 $end
$var wire 1 B, and1 $end
$var wire 1 C, d0 $end
$var wire 1 D, d1 $end
$var wire 1 E, not_sel $end
$var wire 1 7, sel $end
$var wire 1 F, y_mux $end
$upscope $end
$upscope $end
$scope begin bit_mux[2] $end
$var parameter 3 G, i $end
$scope module u_mux $end
$var wire 1 H, and0 $end
$var wire 1 I, and1 $end
$var wire 1 J, d0 $end
$var wire 1 K, d1 $end
$var wire 1 L, not_sel $end
$var wire 1 7, sel $end
$var wire 1 M, y_mux $end
$upscope $end
$upscope $end
$scope begin bit_mux[3] $end
$var parameter 3 N, i $end
$scope module u_mux $end
$var wire 1 O, and0 $end
$var wire 1 P, and1 $end
$var wire 1 Q, d0 $end
$var wire 1 R, d1 $end
$var wire 1 S, not_sel $end
$var wire 1 7, sel $end
$var wire 1 T, y_mux $end
$upscope $end
$upscope $end
$scope begin bit_mux[4] $end
$var parameter 4 U, i $end
$scope module u_mux $end
$var wire 1 V, and0 $end
$var wire 1 W, and1 $end
$var wire 1 X, d0 $end
$var wire 1 Y, d1 $end
$var wire 1 Z, not_sel $end
$var wire 1 7, sel $end
$var wire 1 [, y_mux $end
$upscope $end
$upscope $end
$scope begin bit_mux[5] $end
$var parameter 4 \, i $end
$scope module u_mux $end
$var wire 1 ], and0 $end
$var wire 1 ^, and1 $end
$var wire 1 _, d0 $end
$var wire 1 `, d1 $end
$var wire 1 a, not_sel $end
$var wire 1 7, sel $end
$var wire 1 b, y_mux $end
$upscope $end
$upscope $end
$scope begin bit_mux[6] $end
$var parameter 4 c, i $end
$scope module u_mux $end
$var wire 1 d, and0 $end
$var wire 1 e, and1 $end
$var wire 1 f, d0 $end
$var wire 1 g, d1 $end
$var wire 1 h, not_sel $end
$var wire 1 7, sel $end
$var wire 1 i, y_mux $end
$upscope $end
$upscope $end
$scope begin bit_mux[7] $end
$var parameter 4 j, i $end
$scope module u_mux $end
$var wire 1 k, and0 $end
$var wire 1 l, and1 $end
$var wire 1 m, d0 $end
$var wire 1 n, d1 $end
$var wire 1 o, not_sel $end
$var wire 1 7, sel $end
$var wire 1 p, y_mux $end
$upscope $end
$upscope $end
$scope begin bit_mux[8] $end
$var parameter 5 q, i $end
$scope module u_mux $end
$var wire 1 r, and0 $end
$var wire 1 s, and1 $end
$var wire 1 t, d0 $end
$var wire 1 u, d1 $end
$var wire 1 v, not_sel $end
$var wire 1 7, sel $end
$var wire 1 w, y_mux $end
$upscope $end
$upscope $end
$scope begin bit_mux[9] $end
$var parameter 5 x, i $end
$scope module u_mux $end
$var wire 1 y, and0 $end
$var wire 1 z, and1 $end
$var wire 1 {, d0 $end
$var wire 1 |, d1 $end
$var wire 1 }, not_sel $end
$var wire 1 7, sel $end
$var wire 1 ~, y_mux $end
$upscope $end
$upscope $end
$scope begin bit_mux[10] $end
$var parameter 5 !- i $end
$scope module u_mux $end
$var wire 1 "- and0 $end
$var wire 1 #- and1 $end
$var wire 1 $- d0 $end
$var wire 1 %- d1 $end
$var wire 1 &- not_sel $end
$var wire 1 7, sel $end
$var wire 1 '- y_mux $end
$upscope $end
$upscope $end
$scope begin bit_mux[11] $end
$var parameter 5 (- i $end
$scope module u_mux $end
$var wire 1 )- and0 $end
$var wire 1 *- and1 $end
$var wire 1 +- d0 $end
$var wire 1 ,- d1 $end
$var wire 1 -- not_sel $end
$var wire 1 7, sel $end
$var wire 1 .- y_mux $end
$upscope $end
$upscope $end
$scope begin bit_mux[12] $end
$var parameter 5 /- i $end
$scope module u_mux $end
$var wire 1 0- and0 $end
$var wire 1 1- and1 $end
$var wire 1 2- d0 $end
$var wire 1 3- d1 $end
$var wire 1 4- not_sel $end
$var wire 1 7, sel $end
$var wire 1 5- y_mux $end
$upscope $end
$upscope $end
$scope begin bit_mux[13] $end
$var parameter 5 6- i $end
$scope module u_mux $end
$var wire 1 7- and0 $end
$var wire 1 8- and1 $end
$var wire 1 9- d0 $end
$var wire 1 :- d1 $end
$var wire 1 ;- not_sel $end
$var wire 1 7, sel $end
$var wire 1 <- y_mux $end
$upscope $end
$upscope $end
$scope begin bit_mux[14] $end
$var parameter 5 =- i $end
$scope module u_mux $end
$var wire 1 >- and0 $end
$var wire 1 ?- and1 $end
$var wire 1 @- d0 $end
$var wire 1 A- d1 $end
$var wire 1 B- not_sel $end
$var wire 1 7, sel $end
$var wire 1 C- y_mux $end
$upscope $end
$upscope $end
$scope begin bit_mux[15] $end
$var parameter 5 D- i $end
$scope module u_mux $end
$var wire 1 E- and0 $end
$var wire 1 F- and1 $end
$var wire 1 G- d0 $end
$var wire 1 H- d1 $end
$var wire 1 I- not_sel $end
$var wire 1 7, sel $end
$var wire 1 J- y_mux $end
$upscope $end
$upscope $end
$upscope $end
$scope module shiftmux3 $end
$var wire 16 K- mux_a [15:0] $end
$var wire 16 L- mux_b [15:0] $end
$var wire 1 M- mux_sel $end
$var wire 16 N- mux_y [15:0] $end
$scope begin bit_mux[0] $end
$var parameter 2 O- i $end
$scope module u_mux $end
$var wire 1 P- and0 $end
$var wire 1 Q- and1 $end
$var wire 1 R- d0 $end
$var wire 1 S- d1 $end
$var wire 1 T- not_sel $end
$var wire 1 M- sel $end
$var wire 1 U- y_mux $end
$upscope $end
$upscope $end
$scope begin bit_mux[1] $end
$var parameter 2 V- i $end
$scope module u_mux $end
$var wire 1 W- and0 $end
$var wire 1 X- and1 $end
$var wire 1 Y- d0 $end
$var wire 1 Z- d1 $end
$var wire 1 [- not_sel $end
$var wire 1 M- sel $end
$var wire 1 \- y_mux $end
$upscope $end
$upscope $end
$scope begin bit_mux[2] $end
$var parameter 3 ]- i $end
$scope module u_mux $end
$var wire 1 ^- and0 $end
$var wire 1 _- and1 $end
$var wire 1 `- d0 $end
$var wire 1 a- d1 $end
$var wire 1 b- not_sel $end
$var wire 1 M- sel $end
$var wire 1 c- y_mux $end
$upscope $end
$upscope $end
$scope begin bit_mux[3] $end
$var parameter 3 d- i $end
$scope module u_mux $end
$var wire 1 e- and0 $end
$var wire 1 f- and1 $end
$var wire 1 g- d0 $end
$var wire 1 h- d1 $end
$var wire 1 i- not_sel $end
$var wire 1 M- sel $end
$var wire 1 j- y_mux $end
$upscope $end
$upscope $end
$scope begin bit_mux[4] $end
$var parameter 4 k- i $end
$scope module u_mux $end
$var wire 1 l- and0 $end
$var wire 1 m- and1 $end
$var wire 1 n- d0 $end
$var wire 1 o- d1 $end
$var wire 1 p- not_sel $end
$var wire 1 M- sel $end
$var wire 1 q- y_mux $end
$upscope $end
$upscope $end
$scope begin bit_mux[5] $end
$var parameter 4 r- i $end
$scope module u_mux $end
$var wire 1 s- and0 $end
$var wire 1 t- and1 $end
$var wire 1 u- d0 $end
$var wire 1 v- d1 $end
$var wire 1 w- not_sel $end
$var wire 1 M- sel $end
$var wire 1 x- y_mux $end
$upscope $end
$upscope $end
$scope begin bit_mux[6] $end
$var parameter 4 y- i $end
$scope module u_mux $end
$var wire 1 z- and0 $end
$var wire 1 {- and1 $end
$var wire 1 |- d0 $end
$var wire 1 }- d1 $end
$var wire 1 ~- not_sel $end
$var wire 1 M- sel $end
$var wire 1 !. y_mux $end
$upscope $end
$upscope $end
$scope begin bit_mux[7] $end
$var parameter 4 ". i $end
$scope module u_mux $end
$var wire 1 #. and0 $end
$var wire 1 $. and1 $end
$var wire 1 %. d0 $end
$var wire 1 &. d1 $end
$var wire 1 '. not_sel $end
$var wire 1 M- sel $end
$var wire 1 (. y_mux $end
$upscope $end
$upscope $end
$scope begin bit_mux[8] $end
$var parameter 5 ). i $end
$scope module u_mux $end
$var wire 1 *. and0 $end
$var wire 1 +. and1 $end
$var wire 1 ,. d0 $end
$var wire 1 -. d1 $end
$var wire 1 .. not_sel $end
$var wire 1 M- sel $end
$var wire 1 /. y_mux $end
$upscope $end
$upscope $end
$scope begin bit_mux[9] $end
$var parameter 5 0. i $end
$scope module u_mux $end
$var wire 1 1. and0 $end
$var wire 1 2. and1 $end
$var wire 1 3. d0 $end
$var wire 1 4. d1 $end
$var wire 1 5. not_sel $end
$var wire 1 M- sel $end
$var wire 1 6. y_mux $end
$upscope $end
$upscope $end
$scope begin bit_mux[10] $end
$var parameter 5 7. i $end
$scope module u_mux $end
$var wire 1 8. and0 $end
$var wire 1 9. and1 $end
$var wire 1 :. d0 $end
$var wire 1 ;. d1 $end
$var wire 1 <. not_sel $end
$var wire 1 M- sel $end
$var wire 1 =. y_mux $end
$upscope $end
$upscope $end
$scope begin bit_mux[11] $end
$var parameter 5 >. i $end
$scope module u_mux $end
$var wire 1 ?. and0 $end
$var wire 1 @. and1 $end
$var wire 1 A. d0 $end
$var wire 1 B. d1 $end
$var wire 1 C. not_sel $end
$var wire 1 M- sel $end
$var wire 1 D. y_mux $end
$upscope $end
$upscope $end
$scope begin bit_mux[12] $end
$var parameter 5 E. i $end
$scope module u_mux $end
$var wire 1 F. and0 $end
$var wire 1 G. and1 $end
$var wire 1 H. d0 $end
$var wire 1 I. d1 $end
$var wire 1 J. not_sel $end
$var wire 1 M- sel $end
$var wire 1 K. y_mux $end
$upscope $end
$upscope $end
$scope begin bit_mux[13] $end
$var parameter 5 L. i $end
$scope module u_mux $end
$var wire 1 M. and0 $end
$var wire 1 N. and1 $end
$var wire 1 O. d0 $end
$var wire 1 P. d1 $end
$var wire 1 Q. not_sel $end
$var wire 1 M- sel $end
$var wire 1 R. y_mux $end
$upscope $end
$upscope $end
$scope begin bit_mux[14] $end
$var parameter 5 S. i $end
$scope module u_mux $end
$var wire 1 T. and0 $end
$var wire 1 U. and1 $end
$var wire 1 V. d0 $end
$var wire 1 W. d1 $end
$var wire 1 X. not_sel $end
$var wire 1 M- sel $end
$var wire 1 Y. y_mux $end
$upscope $end
$upscope $end
$scope begin bit_mux[15] $end
$var parameter 5 Z. i $end
$scope module u_mux $end
$var wire 1 [. and0 $end
$var wire 1 \. and1 $end
$var wire 1 ]. d0 $end
$var wire 1 ^. d1 $end
$var wire 1 _. not_sel $end
$var wire 1 M- sel $end
$var wire 1 `. y_mux $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module PE_find_m $end
$var wire 1 a. b0 $end
$var wire 1 b. b1 $end
$var wire 1 c. b2 $end
$var wire 1 d. b3 $end
$var wire 1 e. b4 $end
$var wire 1 f. b5 $end
$var wire 1 g. b6 $end
$var wire 1 h. b7 $end
$var wire 1 i. en $end
$var wire 8 j. ip [7:0] $end
$var wire 1 k. temp1 $end
$var wire 1 l. temp2 $end
$var wire 1 m. temp3 $end
$var wire 1 n. temp4 $end
$var wire 1 o. temp5 $end
$var wire 1 p. temp6 $end
$var wire 1 q. temp7 $end
$var wire 3 r. P [2:0] $end
$upscope $end
$scope module divide $end
$var wire 10 s. data_in_t [9:0] $end
$var wire 10 t. data_out_t [9:0] $end
$scope begin shift_logic[0] $end
$var parameter 2 u. i $end
$scope begin genblk1 $end
$scope module u_mux_g $end
$var wire 1 v. and0 $end
$var wire 1 w. and1 $end
$var wire 1 x. d0 $end
$var wire 1 y. d1 $end
$var wire 1 z. not_sel $end
$var wire 1 {. sel $end
$var wire 1 |. y_mux $end
$upscope $end
$upscope $end
$upscope $end
$scope begin shift_logic[1] $end
$var parameter 2 }. i $end
$scope begin genblk1 $end
$scope module u_mux_g $end
$var wire 1 ~. and0 $end
$var wire 1 !/ and1 $end
$var wire 1 "/ d0 $end
$var wire 1 #/ d1 $end
$var wire 1 $/ not_sel $end
$var wire 1 %/ sel $end
$var wire 1 &/ y_mux $end
$upscope $end
$upscope $end
$upscope $end
$scope begin shift_logic[2] $end
$var parameter 3 '/ i $end
$scope begin genblk1 $end
$scope module u_mux_g $end
$var wire 1 (/ and0 $end
$var wire 1 )/ and1 $end
$var wire 1 */ d0 $end
$var wire 1 +/ d1 $end
$var wire 1 ,/ not_sel $end
$var wire 1 -/ sel $end
$var wire 1 ./ y_mux $end
$upscope $end
$upscope $end
$upscope $end
$scope begin shift_logic[3] $end
$var parameter 3 // i $end
$scope begin genblk1 $end
$scope module u_mux_g $end
$var wire 1 0/ and0 $end
$var wire 1 1/ and1 $end
$var wire 1 2/ d0 $end
$var wire 1 3/ d1 $end
$var wire 1 4/ not_sel $end
$var wire 1 5/ sel $end
$var wire 1 6/ y_mux $end
$upscope $end
$upscope $end
$upscope $end
$scope begin shift_logic[4] $end
$var parameter 4 7/ i $end
$scope begin genblk1 $end
$scope module u_mux_g $end
$var wire 1 8/ and0 $end
$var wire 1 9/ and1 $end
$var wire 1 :/ d0 $end
$var wire 1 ;/ d1 $end
$var wire 1 </ not_sel $end
$var wire 1 =/ sel $end
$var wire 1 >/ y_mux $end
$upscope $end
$upscope $end
$upscope $end
$scope begin shift_logic[5] $end
$var parameter 4 ?/ i $end
$scope begin genblk1 $end
$scope module u_mux_g $end
$var wire 1 @/ and0 $end
$var wire 1 A/ and1 $end
$var wire 1 B/ d0 $end
$var wire 1 C/ d1 $end
$var wire 1 D/ not_sel $end
$var wire 1 E/ sel $end
$var wire 1 F/ y_mux $end
$upscope $end
$upscope $end
$upscope $end
$scope begin shift_logic[6] $end
$var parameter 4 G/ i $end
$scope begin genblk1 $end
$scope module u_mux_g $end
$var wire 1 H/ and0 $end
$var wire 1 I/ and1 $end
$var wire 1 J/ d0 $end
$var wire 1 K/ d1 $end
$var wire 1 L/ not_sel $end
$var wire 1 M/ sel $end
$var wire 1 N/ y_mux $end
$upscope $end
$upscope $end
$upscope $end
$scope begin shift_logic[7] $end
$var parameter 4 O/ i $end
$scope begin genblk1 $end
$scope module u_mux_g $end
$var wire 1 P/ and0 $end
$var wire 1 Q/ and1 $end
$var wire 1 R/ d0 $end
$var wire 1 S/ d1 $end
$var wire 1 T/ not_sel $end
$var wire 1 U/ sel $end
$var wire 1 V/ y_mux $end
$upscope $end
$upscope $end
$upscope $end
$scope begin shift_logic[8] $end
$var parameter 5 W/ i $end
$scope begin genblk1 $end
$scope module u_mux_g $end
$var wire 1 X/ and0 $end
$var wire 1 Y/ and1 $end
$var wire 1 Z/ d0 $end
$var wire 1 [/ d1 $end
$var wire 1 \/ not_sel $end
$var wire 1 ]/ sel $end
$var wire 1 ^/ y_mux $end
$upscope $end
$upscope $end
$upscope $end
$scope begin shift_logic[9] $end
$var parameter 5 _/ i $end
$scope begin genblk1 $end
$scope module u_mux_x $end
$var wire 1 `/ and0 $end
$var wire 1 a/ and1 $end
$var wire 1 b/ d0 $end
$var wire 1 c/ d1 $end
$var wire 1 d/ not_sel $end
$var wire 1 e/ sel $end
$var wire 1 f/ y_mux $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module exact1 $end
$var wire 1 g/ w10 $end
$var wire 1 h/ w21 $end
$var wire 1 i/ w6 $end
$var wire 1 j/ w9 $end
$var wire 1 k/ w8 $end
$var wire 1 l/ w7 $end
$var wire 1 m/ w5 $end
$var wire 1 n/ w4 $end
$var wire 1 o/ w30 $end
$var wire 1 p/ w3 $end
$var wire 1 q/ w29 $end
$var wire 1 r/ w28 $end
$var wire 1 s/ w27 $end
$var wire 1 t/ w26 $end
$var wire 1 u/ w25 $end
$var wire 1 v/ w24 $end
$var wire 1 w/ w23 $end
$var wire 1 x/ w22 $end
$var wire 1 y/ w20 $end
$var wire 1 z/ w2 $end
$var wire 1 {/ w19 $end
$var wire 1 |/ w18 $end
$var wire 1 }/ w17 $end
$var wire 1 ~/ w16 $end
$var wire 1 !0 w15 $end
$var wire 1 "0 w14 $end
$var wire 1 #0 w13 $end
$var wire 1 $0 w12 $end
$var wire 1 %0 w11 $end
$var wire 1 &0 w1 $end
$var wire 6 '0 R [5:0] $end
$var wire 3 (0 Q [2:0] $end
$var wire 6 )0 A [5:0] $end
$scope module ERSC0 $end
$var wire 1 *0 a $end
$var wire 1 +0 a1 $end
$var wire 1 ,0 b $end
$var wire 1 -0 bin $end
$var wire 1 z/ bout $end
$var wire 1 .0 qout $end
$var wire 1 /0 y1 $end
$var wire 1 00 y2 $end
$var wire 1 10 y3 $end
$var wire 1 20 y4 $end
$var wire 1 p/ r $end
$var wire 1 &0 qin $end
$scope module mux_ESRC $end
$var wire 1 30 and0 $end
$var wire 1 40 and1 $end
$var wire 1 *0 d0 $end
$var wire 1 20 d1 $end
$var wire 1 50 not_sel $end
$var wire 1 p/ y_mux $end
$var wire 1 &0 sel $end
$upscope $end
$upscope $end
$scope module ERSC1 $end
$var wire 1 60 a $end
$var wire 1 70 a1 $end
$var wire 1 80 b $end
$var wire 1 z/ bin $end
$var wire 1 n/ bout $end
$var wire 1 i/ qin $end
$var wire 1 &0 qout $end
$var wire 1 90 y1 $end
$var wire 1 :0 y2 $end
$var wire 1 ;0 y3 $end
$var wire 1 <0 y4 $end
$var wire 1 m/ r $end
$scope module mux_ESRC $end
$var wire 1 =0 and0 $end
$var wire 1 >0 and1 $end
$var wire 1 60 d0 $end
$var wire 1 <0 d1 $end
$var wire 1 ?0 not_sel $end
$var wire 1 i/ sel $end
$var wire 1 m/ y_mux $end
$upscope $end
$upscope $end
$scope module ERSC10 $end
$var wire 1 @0 a $end
$var wire 1 A0 a1 $end
$var wire 1 B0 b $end
$var wire 1 s/ bout $end
$var wire 1 o/ qout $end
$var wire 1 C0 y1 $end
$var wire 1 D0 y2 $end
$var wire 1 E0 y3 $end
$var wire 1 F0 y4 $end
$var wire 1 G0 r $end
$var wire 1 r/ qin $end
$var wire 1 q/ bin $end
$scope module mux_ESRC $end
$var wire 1 H0 and0 $end
$var wire 1 I0 and1 $end
$var wire 1 @0 d0 $end
$var wire 1 F0 d1 $end
$var wire 1 J0 not_sel $end
$var wire 1 G0 y_mux $end
$var wire 1 r/ sel $end
$upscope $end
$upscope $end
$scope module ERSC11 $end
$var wire 1 K0 a $end
$var wire 1 L0 a1 $end
$var wire 1 M0 b $end
$var wire 1 N0 bin $end
$var wire 1 q/ bout $end
$var wire 1 o/ qin $end
$var wire 1 O0 qout $end
$var wire 1 P0 y1 $end
$var wire 1 Q0 y2 $end
$var wire 1 R0 y3 $end
$var wire 1 S0 y4 $end
$var wire 1 T0 r $end
$scope module mux_ESRC $end
$var wire 1 U0 and0 $end
$var wire 1 V0 and1 $end
$var wire 1 K0 d0 $end
$var wire 1 S0 d1 $end
$var wire 1 W0 not_sel $end
$var wire 1 o/ sel $end
$var wire 1 T0 y_mux $end
$upscope $end
$upscope $end
$scope module ERSC2 $end
$var wire 1 m/ a $end
$var wire 1 X0 a1 $end
$var wire 1 Y0 b $end
$var wire 1 j/ bout $end
$var wire 1 g/ qin $end
$var wire 1 k/ qout $end
$var wire 1 Z0 y1 $end
$var wire 1 [0 y2 $end
$var wire 1 \0 y3 $end
$var wire 1 ]0 y4 $end
$var wire 1 %0 r $end
$var wire 1 l/ bin $end
$scope module mux_ESRC $end
$var wire 1 ^0 and0 $end
$var wire 1 _0 and1 $end
$var wire 1 m/ d0 $end
$var wire 1 ]0 d1 $end
$var wire 1 `0 not_sel $end
$var wire 1 g/ sel $end
$var wire 1 %0 y_mux $end
$upscope $end
$upscope $end
$scope module ERSC3 $end
$var wire 1 p/ a $end
$var wire 1 a0 a1 $end
$var wire 1 b0 b $end
$var wire 1 l/ bout $end
$var wire 1 k/ qin $end
$var wire 1 #0 qout $end
$var wire 1 c0 y1 $end
$var wire 1 d0 y2 $end
$var wire 1 e0 y3 $end
$var wire 1 f0 y4 $end
$var wire 1 "0 r $end
$var wire 1 $0 bin $end
$scope module mux_ESRC $end
$var wire 1 g0 and0 $end
$var wire 1 h0 and1 $end
$var wire 1 p/ d0 $end
$var wire 1 f0 d1 $end
$var wire 1 i0 not_sel $end
$var wire 1 k/ sel $end
$var wire 1 "0 y_mux $end
$upscope $end
$upscope $end
$scope module ERSC4 $end
$var wire 1 j0 a $end
$var wire 1 k0 a1 $end
$var wire 1 l0 b $end
$var wire 1 $0 bout $end
$var wire 1 #0 qin $end
$var wire 1 ~/ qout $end
$var wire 1 m0 y1 $end
$var wire 1 n0 y2 $end
$var wire 1 o0 y3 $end
$var wire 1 p0 y4 $end
$var wire 1 }/ r $end
$var wire 1 !0 bin $end
$scope module mux_ESRC $end
$var wire 1 q0 and0 $end
$var wire 1 r0 and1 $end
$var wire 1 j0 d0 $end
$var wire 1 p0 d1 $end
$var wire 1 s0 not_sel $end
$var wire 1 #0 sel $end
$var wire 1 }/ y_mux $end
$upscope $end
$upscope $end
$scope module ERSC5 $end
$var wire 1 t0 a $end
$var wire 1 u0 a1 $end
$var wire 1 v0 b $end
$var wire 1 w0 bin $end
$var wire 1 !0 bout $end
$var wire 1 ~/ qin $end
$var wire 1 x0 qout $end
$var wire 1 y0 y1 $end
$var wire 1 z0 y2 $end
$var wire 1 {0 y3 $end
$var wire 1 |0 y4 $end
$var wire 1 |/ r $end
$scope module mux_ESRC $end
$var wire 1 }0 and0 $end
$var wire 1 ~0 and1 $end
$var wire 1 t0 d0 $end
$var wire 1 |0 d1 $end
$var wire 1 !1 not_sel $end
$var wire 1 ~/ sel $end
$var wire 1 |/ y_mux $end
$upscope $end
$upscope $end
$scope module ERSC6 $end
$var wire 1 %0 a $end
$var wire 1 "1 a1 $end
$var wire 1 #1 b $end
$var wire 1 x/ bout $end
$var wire 1 h/ qin $end
$var wire 1 y/ qout $end
$var wire 1 $1 y1 $end
$var wire 1 %1 y2 $end
$var wire 1 &1 y3 $end
$var wire 1 '1 y4 $end
$var wire 1 (1 r $end
$var wire 1 {/ bin $end
$scope module mux_ESRC $end
$var wire 1 )1 and0 $end
$var wire 1 *1 and1 $end
$var wire 1 %0 d0 $end
$var wire 1 '1 d1 $end
$var wire 1 +1 not_sel $end
$var wire 1 h/ sel $end
$var wire 1 (1 y_mux $end
$upscope $end
$upscope $end
$scope module ERSC7 $end
$var wire 1 "0 a $end
$var wire 1 ,1 a1 $end
$var wire 1 -1 b $end
$var wire 1 {/ bout $end
$var wire 1 y/ qin $end
$var wire 1 v/ qout $end
$var wire 1 .1 y1 $end
$var wire 1 /1 y2 $end
$var wire 1 01 y3 $end
$var wire 1 11 y4 $end
$var wire 1 21 r $end
$var wire 1 w/ bin $end
$scope module mux_ESRC $end
$var wire 1 31 and0 $end
$var wire 1 41 and1 $end
$var wire 1 "0 d0 $end
$var wire 1 11 d1 $end
$var wire 1 51 not_sel $end
$var wire 1 y/ sel $end
$var wire 1 21 y_mux $end
$upscope $end
$upscope $end
$scope module ERSC8 $end
$var wire 1 }/ a $end
$var wire 1 61 a1 $end
$var wire 1 71 b $end
$var wire 1 w/ bout $end
$var wire 1 v/ qin $end
$var wire 1 t/ qout $end
$var wire 1 81 y1 $end
$var wire 1 91 y2 $end
$var wire 1 :1 y3 $end
$var wire 1 ;1 y4 $end
$var wire 1 <1 r $end
$var wire 1 u/ bin $end
$scope module mux_ESRC $end
$var wire 1 =1 and0 $end
$var wire 1 >1 and1 $end
$var wire 1 }/ d0 $end
$var wire 1 ;1 d1 $end
$var wire 1 ?1 not_sel $end
$var wire 1 v/ sel $end
$var wire 1 <1 y_mux $end
$upscope $end
$upscope $end
$scope module ERSC9 $end
$var wire 1 |/ a $end
$var wire 1 @1 a1 $end
$var wire 1 A1 b $end
$var wire 1 s/ bin $end
$var wire 1 u/ bout $end
$var wire 1 t/ qin $end
$var wire 1 r/ qout $end
$var wire 1 B1 y1 $end
$var wire 1 C1 y2 $end
$var wire 1 D1 y3 $end
$var wire 1 E1 y4 $end
$var wire 1 F1 r $end
$scope module mux_ESRC $end
$var wire 1 G1 and0 $end
$var wire 1 H1 and1 $end
$var wire 1 |/ d0 $end
$var wire 1 E1 d1 $end
$var wire 1 I1 not_sel $end
$var wire 1 t/ sel $end
$var wire 1 F1 y_mux $end
$upscope $end
$upscope $end
$upscope $end
$scope module firstmux $end
$var wire 6 J1 mux_a [5:0] $end
$var wire 6 K1 mux_b [5:0] $end
$var wire 6 L1 mux_y [5:0] $end
$var wire 1 ' mux_sel $end
$scope begin bit_mux[0] $end
$var parameter 2 M1 i $end
$scope module u_mux $end
$var wire 1 N1 and0 $end
$var wire 1 O1 and1 $end
$var wire 1 P1 d0 $end
$var wire 1 Q1 d1 $end
$var wire 1 R1 not_sel $end
$var wire 1 S1 y_mux $end
$var wire 1 ' sel $end
$upscope $end
$upscope $end
$scope begin bit_mux[1] $end
$var parameter 2 T1 i $end
$scope module u_mux $end
$var wire 1 U1 and0 $end
$var wire 1 V1 and1 $end
$var wire 1 W1 d0 $end
$var wire 1 X1 d1 $end
$var wire 1 Y1 not_sel $end
$var wire 1 Z1 y_mux $end
$var wire 1 ' sel $end
$upscope $end
$upscope $end
$scope begin bit_mux[2] $end
$var parameter 3 [1 i $end
$scope module u_mux $end
$var wire 1 \1 and0 $end
$var wire 1 ]1 and1 $end
$var wire 1 ^1 d0 $end
$var wire 1 _1 d1 $end
$var wire 1 `1 not_sel $end
$var wire 1 a1 y_mux $end
$var wire 1 ' sel $end
$upscope $end
$upscope $end
$scope begin bit_mux[3] $end
$var parameter 3 b1 i $end
$scope module u_mux $end
$var wire 1 c1 and0 $end
$var wire 1 d1 and1 $end
$var wire 1 e1 d0 $end
$var wire 1 f1 d1 $end
$var wire 1 g1 not_sel $end
$var wire 1 h1 y_mux $end
$var wire 1 ' sel $end
$upscope $end
$upscope $end
$scope begin bit_mux[4] $end
$var parameter 4 i1 i $end
$scope module u_mux $end
$var wire 1 j1 and0 $end
$var wire 1 k1 and1 $end
$var wire 1 l1 d0 $end
$var wire 1 m1 d1 $end
$var wire 1 n1 not_sel $end
$var wire 1 o1 y_mux $end
$var wire 1 ' sel $end
$upscope $end
$upscope $end
$scope begin bit_mux[5] $end
$var parameter 4 p1 i $end
$scope module u_mux $end
$var wire 1 q1 and0 $end
$var wire 1 r1 and1 $end
$var wire 1 s1 d0 $end
$var wire 1 t1 d1 $end
$var wire 1 u1 not_sel $end
$var wire 1 v1 y_mux $end
$var wire 1 ' sel $end
$upscope $end
$upscope $end
$upscope $end
$scope module nor_select_line $end
$var wire 1 w1 or_result1 $end
$var wire 1 x1 or_result2 $end
$var wire 1 ' s $end
$var wire 1 y1 temp1 $end
$var wire 1 z1 temp2 $end
$var wire 1 {1 temp3 $end
$var wire 6 |1 z [5:0] $end
$upscope $end
$scope module second_mux $end
$var wire 8 }1 mux_a [7:0] $end
$var wire 8 ~1 mux_b [7:0] $end
$var wire 1 ' mux_sel $end
$var wire 8 !2 mux_y [7:0] $end
$scope begin bit_mux[0] $end
$var parameter 2 "2 i $end
$scope module u_mux $end
$var wire 1 #2 and0 $end
$var wire 1 $2 and1 $end
$var wire 1 %2 d0 $end
$var wire 1 &2 d1 $end
$var wire 1 '2 not_sel $end
$var wire 1 ' sel $end
$var wire 1 (2 y_mux $end
$upscope $end
$upscope $end
$scope begin bit_mux[1] $end
$var parameter 2 )2 i $end
$scope module u_mux $end
$var wire 1 *2 and0 $end
$var wire 1 +2 and1 $end
$var wire 1 ,2 d0 $end
$var wire 1 -2 d1 $end
$var wire 1 .2 not_sel $end
$var wire 1 ' sel $end
$var wire 1 /2 y_mux $end
$upscope $end
$upscope $end
$scope begin bit_mux[2] $end
$var parameter 3 02 i $end
$scope module u_mux $end
$var wire 1 12 and0 $end
$var wire 1 22 and1 $end
$var wire 1 32 d0 $end
$var wire 1 42 d1 $end
$var wire 1 52 not_sel $end
$var wire 1 ' sel $end
$var wire 1 62 y_mux $end
$upscope $end
$upscope $end
$scope begin bit_mux[3] $end
$var parameter 3 72 i $end
$scope module u_mux $end
$var wire 1 82 and0 $end
$var wire 1 92 and1 $end
$var wire 1 :2 d0 $end
$var wire 1 ;2 d1 $end
$var wire 1 <2 not_sel $end
$var wire 1 ' sel $end
$var wire 1 =2 y_mux $end
$upscope $end
$upscope $end
$scope begin bit_mux[4] $end
$var parameter 4 >2 i $end
$scope module u_mux $end
$var wire 1 ?2 and0 $end
$var wire 1 @2 and1 $end
$var wire 1 A2 d0 $end
$var wire 1 B2 d1 $end
$var wire 1 C2 not_sel $end
$var wire 1 ' sel $end
$var wire 1 D2 y_mux $end
$upscope $end
$upscope $end
$scope begin bit_mux[5] $end
$var parameter 4 E2 i $end
$scope module u_mux $end
$var wire 1 F2 and0 $end
$var wire 1 G2 and1 $end
$var wire 1 H2 d0 $end
$var wire 1 I2 d1 $end
$var wire 1 J2 not_sel $end
$var wire 1 ' sel $end
$var wire 1 K2 y_mux $end
$upscope $end
$upscope $end
$scope begin bit_mux[6] $end
$var parameter 4 L2 i $end
$scope module u_mux $end
$var wire 1 M2 and0 $end
$var wire 1 N2 and1 $end
$var wire 1 O2 d0 $end
$var wire 1 P2 d1 $end
$var wire 1 Q2 not_sel $end
$var wire 1 ' sel $end
$var wire 1 R2 y_mux $end
$upscope $end
$upscope $end
$scope begin bit_mux[7] $end
$var parameter 4 S2 i $end
$scope module u_mux $end
$var wire 1 T2 and0 $end
$var wire 1 U2 and1 $end
$var wire 1 V2 d0 $end
$var wire 1 W2 d1 $end
$var wire 1 X2 not_sel $end
$var wire 1 ' sel $end
$var wire 1 Y2 y_mux $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b111 S2
b110 L2
b101 E2
b100 >2
b11 72
b10 02
b1 )2
b0 "2
b101 p1
b100 i1
b11 b1
b10 [1
b1 T1
b0 M1
b1001 _/
b1000 W/
b111 O/
b110 G/
b101 ?/
b100 7/
b11 //
b10 '/
b1 }.
b0 u.
b1111 Z.
b1110 S.
b1101 L.
b1100 E.
b1011 >.
b1010 7.
b1001 0.
b1000 ).
b111 ".
b110 y-
b101 r-
b100 k-
b11 d-
b10 ]-
b1 V-
b0 O-
b1111 D-
b1110 =-
b1101 6-
b1100 /-
b1011 (-
b1010 !-
b1001 x,
b1000 q,
b111 j,
b110 c,
b101 \,
b100 U,
b11 N,
b10 G,
b1 @,
b0 9,
b1111 .,
b1110 ',
b1101 ~+
b1100 w+
b1011 p+
b1010 i+
b1001 b+
b1000 [+
b111 T+
b110 M+
b101 F+
b100 ?+
b11 8+
b10 1+
b1 *+
b0 #+
b1111 u*
b1110 m*
b1101 e*
b1100 ]*
b1011 U*
b1010 M*
b1001 E*
b1000 =*
b111 5*
b110 -*
b101 %*
b100 {)
b11 s)
b10 k)
b1 c)
b0 [)
b1111 Q)
b1110 I)
b1101 A)
b1100 9)
b1011 1)
b1010 ))
b1001 !)
b1000 w(
b111 o(
b110 g(
b101 _(
b100 W(
b11 O(
b10 G(
b1 ?(
b0 7(
b1111 -(
b1110 %(
b1101 {'
b1100 s'
b1011 k'
b1010 c'
b1001 ['
b1000 S'
b111 K'
b110 C'
b101 ;'
b100 3'
b11 +'
b10 #'
b1 y&
b0 q&
b1111 g&
b1110 _&
b1101 W&
b1100 O&
b1011 G&
b1010 ?&
b1001 7&
b1000 /&
b111 '&
b110 }%
b101 u%
b100 m%
b11 e%
b10 ]%
b1 U%
b0 M%
b1111 C%
b1110 ;%
b1101 3%
b1100 +%
b1011 #%
b1010 y$
b1001 q$
b1000 i$
b111 a$
b110 Y$
b101 Q$
b100 I$
b11 A$
b10 9$
b1 1$
b0 )$
b1111 }#
b1110 u#
b1101 m#
b1100 e#
b1011 ]#
b1010 U#
b1001 M#
b1000 E#
b111 =#
b110 5#
b101 -#
b100 %#
b11 {"
b10 s"
b1 k"
b0 c"
b1111 Y"
b1110 Q"
b1101 I"
b1100 A"
b1011 9"
b1010 1"
b1001 )"
b1000 !"
b111 w
b110 o
b101 g
b100 _
b11 W
b10 O
b1 G
b0 ?
$end
#0
$dumpvars
1Y2
1X2
0W2
1V2
0U2
1T2
0R2
1Q2
0P2
0O2
0N2
0M2
1K2
1J2
0I2
1H2
0G2
1F2
0D2
1C2
1B2
0A2
0@2
0?2
1=2
1<2
0;2
1:2
092
182
062
152
142
032
022
012
1/2
1.2
1-2
1,2
0+2
1*2
1(2
1'2
1&2
1%2
0$2
1#2
b10101011 !2
b10111 ~1
b10101011 }1
b100001 |1
1{1
0z1
1y1
1x1
1w1
1v1
1u1
1t1
1s1
0r1
1q1
0o1
1n1
1m1
0l1
0k1
0j1
0h1
1g1
1f1
0e1
0d1
0c1
0a1
1`1
0_1
0^1
0]1
0\1
0Z1
1Y1
0X1
0W1
0V1
0U1
1S1
1R1
1Q1
1P1
0O1
1N1
b100001 L1
b111001 K1
b100001 J1
0I1
0H1
0G1
0F1
0E1
0D1
0C1
0B1
0A1
1@1
0?1
1>1
0=1
1<1
1;1
0:1
091
181
171
161
051
041
031
021
011
001
0/1
0.1
0-1
0,1
0+1
0*1
0)1
0(1
0'1
0&1
0%1
0$1
0#1
1"1
1!1
0~0
0}0
1|0
0{0
0z0
1y0
0x0
0w0
1v0
1u0
0t0
1s0
0r0
0q0
1p0
0o0
1n0
0m0
0l0
1k0
0j0
1i0
0h0
1g0
1f0
1e0
0d0
0c0
1b0
0a0
1`0
0_0
0^0
1]0
0\0
1[0
0Z0
0Y0
1X0
0W0
0V0
0U0
0T0
0S0
0R0
0Q0
0P0
1O0
0N0
1M0
0L0
1K0
0J0
0I0
0H0
0G0
0F0
0E0
0D0
0C0
0B0
1A0
0@0
0?0
0>0
0=0
0<0
0;0
0:0
090
080
070
160
050
140
030
120
010
000
1/0
1.0
0-0
1,0
1+0
0*0
b100001 )0
b101 (0
b1000 '0
1&0
0%0
1$0
0#0
1"0
1!0
0~/
0}/
0|/
0{/
1z/
1y/
0x/
1w/
1v/
0u/
1t/
0s/
1r/
0q/
1p/
1o/
0n/
0m/
1l/
0k/
1j/
1i/
1h/
0g/
0f/
1e/
0d/
0c/
1b/
0a/
0`/
1^/
1]/
0\/
1[/
1Z/
1Y/
0X/
1V/
1U/
0T/
1S/
1R/
1Q/
0P/
1N/
1M/
0L/
1K/
0J/
1I/
0H/
0F/
1E/
0D/
0C/
0B/
0A/
0@/
0>/
1=/
0</
0;/
1:/
09/
08/
16/
15/
04/
13/
12/
11/
00/
1./
1-/
0,/
1+/
0*/
1)/
0(/
0&/
1%/
0$/
0#/
0"/
0!/
0~.
0|.
1{.
0z.
0y.
1x.
0w.
0v.
b111001100 t.
b1110011001 s.
b111 r.
0q.
1p.
0o.
1n.
1m.
1l.
1k.
b10100000 j.
1i.
1h.
0g.
0f.
0e.
0d.
0c.
0b.
0a.
0`.
0_.
0^.
0].
0\.
0[.
0Y.
0X.
0W.
0V.
0U.
0T.
0R.
0Q.
0P.
0O.
0N.
0M.
0K.
0J.
0I.
1H.
0G.
0F.
0D.
0C.
0B.
0A.
0@.
0?.
0=.
0<.
0;.
0:.
09.
08.
06.
05.
04.
03.
02.
01.
1/.
0..
1-.
0,.
1+.
0*.
0(.
0'.
0&.
1%.
0$.
0#.
0!.
0~-
0}-
0|-
0{-
0z-
0x-
0w-
0v-
1u-
0t-
0s-
0q-
0p-
0o-
1n-
0m-
0l-
1j-
0i-
1h-
1g-
1f-
0e-
0c-
0b-
0a-
0`-
0_-
0^-
1\-
0[-
1Z-
0Y-
1X-
0W-
1U-
0T-
1S-
1R-
1Q-
0P-
b100001011 N-
1M-
b100001011 L-
b1000010111001 K-
0J-
0I-
0H-
0G-
0F-
0E-
0C-
0B-
0A-
1@-
0?-
0>-
0<-
0;-
0:-
09-
08-
07-
15-
04-
13-
02-
11-
00-
0.-
0--
0,-
0+-
0*-
0)-
0'-
0&-
0%-
0$-
0#-
0"-
0~,
0},
0|,
1{,
0z,
0y,
0w,
0v,
0u,
0t,
0s,
0r,
1p,
0o,
1n,
1m,
1l,
0k,
0i,
0h,
0g,
1f,
0e,
0d,
1b,
0a,
1`,
1_,
1^,
0],
1[,
0Z,
1Y,
0X,
1W,
0V,
1T,
0S,
1R,
0Q,
1P,
0O,
0M,
0L,
0K,
1J,
0I,
0H,
0F,
0E,
0D,
1C,
0B,
0A,
1?,
0>,
1=,
0<,
1;,
0:,
b1000010111001 8,
17,
b1000010111001 6,
b100001011100110 5,
04,
03,
02,
11,
00,
0/,
1-,
0,,
1+,
0*,
1),
0(,
0&,
0%,
0$,
0#,
0",
0!,
0}+
0|+
0{+
0z+
0y+
0x+
0v+
0u+
0t+
0s+
0r+
0q+
0o+
0n+
0m+
1l+
0k+
0j+
1h+
0g+
1f+
0e+
1d+
0c+
0a+
0`+
0_+
1^+
0]+
0\+
1Z+
0Y+
1X+
1W+
1V+
0U+
1S+
0R+
1Q+
1P+
1O+
0N+
1L+
0K+
1J+
0I+
1H+
0G+
0E+
0D+
0C+
0B+
0A+
0@+
0>+
0=+
0<+
1;+
0:+
09+
17+
06+
15+
14+
13+
02+
10+
0/+
1.+
0-+
1,+
0++
0)+
0(+
0'+
0&+
0%+
0$+
b100001011100110 "+
1!+
b100001011100110 ~*
b1000010111001100 }*
0|*
1{*
0z*
0y*
0x*
0w*
0v*
0t*
1s*
0r*
0q*
0p*
0o*
0n*
0l*
1k*
0j*
0i*
0h*
0g*
0f*
0d*
1c*
0b*
0a*
0`*
0_*
0^*
0\*
1[*
0Z*
0Y*
0X*
0W*
0V*
0T*
1S*
0R*
0Q*
0P*
0O*
0N*
0L*
1K*
0J*
0I*
1H*
0G*
0F*
1D*
1C*
0B*
1A*
0@*
1?*
0>*
0<*
1;*
0:*
09*
08*
07*
06*
04*
13*
02*
01*
00*
0/*
0.*
0,*
1+*
0**
0)*
0(*
0'*
0&*
0$*
1#*
0"*
0!*
1~)
0})
0|)
1z)
1y)
0x)
1w)
0v)
1u)
0t)
0r)
1q)
0p)
0o)
1n)
0m)
0l)
1j)
1i)
0h)
1g)
1f)
1e)
0d)
1b)
1a)
0`)
1_)
1^)
1])
0\)
b100001011 Z)
b1000010111 Y)
0X)
1W)
0V)
0U)
0T)
0S)
0R)
0P)
1O)
0N)
0M)
0L)
0K)
0J)
0H)
1G)
0F)
0E)
0D)
0C)
0B)
0@)
1?)
0>)
0=)
0<)
0;)
0:)
08)
17)
06)
05)
04)
03)
02)
00)
1/)
0.)
0-)
1,)
0+)
0*)
1()
1')
0&)
1%)
0$)
1#)
0")
0~(
1}(
0|(
0{(
0z(
0y(
0x(
0v(
1u(
0t(
0s(
0r(
0q(
0p(
0n(
1m(
0l(
0k(
0j(
0i(
0h(
0f(
1e(
0d(
0c(
1b(
0a(
0`(
1^(
1](
0\(
1[(
0Z(
1Y(
0X(
0V(
1U(
0T(
0S(
1R(
0Q(
0P(
1N(
1M(
0L(
1K(
1J(
1I(
0H(
1F(
1E(
0D(
1C(
1B(
1A(
0@(
1>(
1=(
0<(
1;(
0:(
19(
08(
b1000010111 6(
b10000101110 5(
04(
13(
02(
01(
00(
0/(
0.(
0,(
1+(
0*(
0)(
0((
0'(
0&(
0$(
1#(
0"(
0!(
0~'
0}'
0|'
0z'
1y'
0x'
0w'
0v'
0u'
0t'
0r'
1q'
0p'
0o'
1n'
0m'
0l'
1j'
1i'
0h'
1g'
0f'
1e'
0d'
0b'
1a'
0`'
0_'
0^'
0]'
0\'
0Z'
1Y'
0X'
0W'
0V'
0U'
0T'
0R'
1Q'
0P'
0O'
0N'
0M'
0L'
0J'
1I'
0H'
0G'
1F'
0E'
0D'
1B'
1A'
0@'
1?'
0>'
1='
0<'
0:'
19'
08'
07'
16'
05'
04'
12'
11'
00'
1/'
1.'
1-'
0,'
1*'
1)'
0('
1''
1&'
1%'
0$'
1"'
1!'
0~&
1}&
0|&
1{&
0z&
0x&
1w&
0v&
0u&
0t&
0s&
0r&
b10000101110 p&
b100001011100 o&
0n&
1m&
0l&
0k&
0j&
0i&
0h&
0f&
1e&
0d&
0c&
0b&
0a&
0`&
0^&
1]&
0\&
0[&
0Z&
0Y&
0X&
0V&
1U&
0T&
0S&
1R&
0Q&
0P&
1N&
1M&
0L&
1K&
0J&
1I&
0H&
0F&
1E&
0D&
0C&
0B&
0A&
0@&
0>&
1=&
0<&
0;&
0:&
09&
08&
06&
15&
04&
03&
02&
01&
00&
0.&
1-&
0,&
0+&
1*&
0)&
0(&
1&&
1%&
0$&
1#&
0"&
1!&
0~%
0|%
1{%
0z%
0y%
1x%
0w%
0v%
1t%
1s%
0r%
1q%
1p%
1o%
0n%
1l%
1k%
0j%
1i%
1h%
1g%
0f%
1d%
1c%
0b%
1a%
0`%
1_%
0^%
0\%
1[%
0Z%
0Y%
0X%
0W%
0V%
0T%
1S%
0R%
0Q%
1P%
0O%
0N%
b1000010111001 L%
b100001011100 K%
0J%
1I%
0H%
0G%
0F%
0E%
0D%
0B%
1A%
0@%
0?%
0>%
0=%
0<%
0:%
19%
08%
07%
16%
05%
04%
12%
11%
00%
1/%
0.%
1-%
0,%
0*%
1)%
0(%
0'%
0&%
0%%
0$%
0"%
1!%
0~$
0}$
0|$
0{$
0z$
0x$
1w$
0v$
0u$
0t$
0s$
0r$
0p$
1o$
0n$
0m$
1l$
0k$
0j$
1h$
1g$
0f$
1e$
0d$
1c$
0b$
0`$
1_$
0^$
0]$
1\$
0[$
0Z$
1X$
1W$
0V$
1U$
1T$
1S$
0R$
1P$
1O$
0N$
1M$
1L$
1K$
0J$
1H$
1G$
0F$
1E$
0D$
1C$
0B$
0@$
1?$
0>$
0=$
0<$
0;$
0:$
08$
17$
06$
05$
14$
03$
02$
10$
1/$
0.$
1-$
1,$
1+$
0*$
b1000010111001 ($
b10000101110011 '$
0&$
1%$
0$$
0#$
0"$
0!$
0~#
0|#
1{#
0z#
0y#
1x#
0w#
0v#
1t#
1s#
0r#
1q#
0p#
1o#
0n#
0l#
1k#
0j#
0i#
0h#
0g#
0f#
0d#
1c#
0b#
0a#
0`#
0_#
0^#
0\#
1[#
0Z#
0Y#
0X#
0W#
0V#
0T#
1S#
0R#
0Q#
1P#
0O#
0N#
1L#
1K#
0J#
1I#
0H#
1G#
0F#
0D#
1C#
0B#
0A#
1@#
0?#
0>#
1<#
1;#
0:#
19#
18#
17#
06#
14#
13#
02#
11#
10#
1/#
0.#
1,#
1+#
0*#
1)#
0(#
1'#
0&#
0$#
1##
0"#
0!#
0~"
0}"
0|"
0z"
1y"
0x"
0w"
1v"
0u"
0t"
1r"
1q"
0p"
1o"
1n"
1m"
0l"
1j"
1i"
0h"
1g"
0f"
1e"
0d"
b100001011100110 b"
b10000101110011 a"
0`"
1_"
0^"
0]"
1\"
0["
0Z"
1X"
1W"
0V"
1U"
0T"
1S"
0R"
0P"
1O"
0N"
0M"
0L"
0K"
0J"
0H"
1G"
0F"
0E"
0D"
0C"
0B"
0@"
1?"
0>"
0="
0<"
0;"
0:"
08"
17"
06"
05"
14"
03"
02"
10"
1/"
0."
1-"
0,"
1+"
0*"
0("
1'"
0&"
0%"
1$"
0#"
0""
1~
1}
0|
1{
1z
1y
0x
1v
1u
0t
1s
1r
1q
0p
1n
1m
0l
1k
0j
1i
0h
0f
1e
0d
0c
0b
0a
0`
0^
1]
0\
0[
1Z
0Y
0X
1V
1U
0T
1S
1R
1Q
0P
1N
1M
0L
1K
0J
1I
0H
0F
1E
0D
0C
0B
0A
0@
b100001011100110 >
b1000010111001100 =
b111 <
b100001011 ;
b100001011100110 :
b100001011100110 9
b10000101110011 8
b1000010111001 7
b1000010111001 6
b100001011100 5
b10000101110 4
b1000010111 3
b100001011 2
b1000010111001100 1
b111001100 0
b10101011 /
b111 .
b10111 -
b10101011 ,
b1000010111001100 +
b10100000 *
b101 )
b1000 (
0'
b100001011 &
b111001 %
b100001 $
b1000011110011001 #
b1000011110011001 "
b10101011 !
$end
#10000
0W-
0O0
1W0
1J0
0o/
1o.
0r/
1I1
0H2
042
0t/
1?1
0v/
151
1:(
0y/
1+1
1x&
0S-
0Z-
0h-
0-.
0h/
132
1s&
0b)
0j)
0z)
b0 2
b0 Z)
b0 L-
0D*
1x/
1u&
1|&
0])
0e)
0u)
0?*
1%1
1c-
1\%
0^)
0_)
0f)
0g)
0n)
0w)
0~)
0A*
0H*
1{/
1^-
1W%
0>(
0F(
0N(
0^(
b0 3
b0 6(
b0 Y)
0()
1/1
1`-
1`%
1Y%
09(
0A(
0I(
0Y(
0#)
1M,
0;(
0B(
0C(
0J(
0K(
0R(
0[(
0b(
0%)
0,)
1:,
1H,
0"'
0*'
02'
0B'
b1 4
b1 p&
b1 5(
0j'
0t&
0{&
0%'
0-'
0='
0e'
1(2
0/2
0T%
0}&
0&'
0''
0.'
0/'
06'
0?'
0F'
0g'
0n'
0,$
0A2
0O%
0d%
0l%
0t%
0&&
b10 5
b10 K%
b10 o&
0N&
0j"
1%2
1&2
0,2
0-2
0:2
0Y-
0X%
0Q%
0_%
0g%
0o%
0!&
0I&
1<,
1f"
0e"
1,1
1=,
0R,
0Y,
0`,
0n,
0q-
0x-
0(.
0K.
1R-
1P%
0F,
0g-
0h%
0a%
0n-
0p%
0i%
0u-
0x%
0q%
0%.
0*&
0#&
0H.
0R&
0K&
1)+
0C,
0n"
0g"
0"0
1@1
03-
10$
0H$
0P$
0X$
0h$
1P-
1U-
0\-
0e-
0j-
0l-
0s-
0#.
b101 &
b101 ;
b101 N-
0/.
0F.
1?,
0A,
0T,
0[,
0b,
0p,
b101 6
b101 L%
b101 8,
b101 K-
05-
1$+
00+
12+
0|/
161
b1 7
b1 ($
b1 6,
02%
1+$
0C$
0K$
0S$
0c$
021
1T-
0Q-
1[-
0X-
1b-
1i-
0f-
1p-
1w-
1~-
1'.
1..
0+.
15.
1<.
1C.
1J.
1Q.
1X.
1_.
1>,
0;,
1E,
1L,
1S,
0P,
1Z,
0W,
1a,
0^,
1h,
1o,
0l,
1v,
1},
1&-
1--
14-
01-
1;-
1B-
1I-
1(+
1/+
0,+
16+
1=+
1D+
1K+
1R+
1Y+
1`+
1g+
1n+
1u+
1|+
1%,
1,,
13,
092
1p.
0g.
0x0
1!1
0~0
0}/
0-%
1-$
14$
0E$
0L$
0M$
0T$
0U$
0\$
0e$
0l$
041
0M-
07,
0!+
0B1
0D1
0O2
0;2
0~/
1s0
0r0
0/%
06%
1r"
0,#
04#
0<#
0L#
111
0<1
0f.
b0 .
b0 <
b0 r.
1d0
0A1
0#0
1i0
0h0
b10 8
b10 a"
b10 '$
0t#
1m"
0'#
0/#
07#
191
0F1
0G#
1l/
1w/
0>1
1q.
0h.
1a0
0g0
0k/
1`0
0_0
0(1
0o#
1J,
1v"
1o"
0_,
00#
0)#
0f,
08#
01#
0m,
0@#
09#
1u/
0H1
0{,
0P#
0I#
0e0
081
1;1
0V2
0B2
0p/
0g/
0*1
0@-
0x#
0q#
17+
0L+
0S+
0Z+
0G0
1C1
1E1
0h+
0b0
071
b101 ,
b101 }1
b1 -
b1 ~1
b0 *
b0 j.
040
150
0.0
1j/
1"1
1'1
b101 9
b101 b"
b101 "+
b101 5,
0-,
03+
0H+
0O+
0V+
0I0
1s/
0d+
b0 )
b0 (0
0&0
1?0
1[0
0%0
0),
05+
0J+
0Q+
0X+
0=2
0K2
0Y2
1F0
1D0
0f+
0i/
1X0
1]0
0^0
0+,
0V
0n
0v
0~
0#2
0*2
062
082
b1 !
b1 /
b1 !2
0D2
0F2
0T2
1q/
b0 (
b0 '0
0T0
00"
1n/
0m/
b10 :
b10 >
b10 ~*
0X"
0Q
0i
0q
0y
0'2
1$2
0.2
0+2
052
022
0<2
0C2
0@2
0J2
0Q2
0X2
0u1
0n1
0g1
0`1
0Y1
0R1
1P0
0V0
0+"
1:0
0>0
0S"
1B
1&+
0S
0Z
0;+
0k
0r
0P+
0s
0z
0W+
0{
0$"
0^+
1'
1L0
1S0
0-"
04"
0l+
170
1<0
0U"
0\"
01,
0x1
0K0
060
b101 +
b101 1
b101 =
b101 }*
1|.
06/
0N/
0V/
b101 0
b101 t.
0^/
0w1
0S1
b0 $
b0 )0
b0 L1
0v1
1w.
01/
0I/
0Q/
0Y/
0y1
0{1
0N1
0q1
0x.
1y.
1"/
03/
0:/
0K/
0R/
0S/
0Z/
0[/
0b/
0t1
0m1
0f1
0Q1
0P1
0s1
b1010 s.
b0 %
b0 K1
b0 |1
b0 J1
b1010 "
b1010 #
#20000
b11 !
b11 /
b11 !2
1/2
1+2
1,2
1-2
b111 ,
b111 }1
b11 -
b11 ~1
1t&
b111 &
b111 ;
b111 N-
1\-
b11 5
b11 K%
b11 o&
1T%
1W-
1O%
1Y-
1X%
1Q%
1,$
b111 6
b111 L%
b111 8,
b111 K-
1F,
b11 8
b11 a"
b11 '$
1j"
1A,
1e"
1'+
1C,
1n"
1g"
b11 :
b11 >
b11 ~*
1F
b111 9
b111 b"
b111 "+
b111 5,
10+
1A
1++
1C
1J
1-+
b111 +
b111 1
b111 =
b111 }*
b111 0
b111 t.
1&/
1!/
1x.
1#/
1*/
b1111 s.
b1111 "
b1111 #
#30000
b1 !
b1 /
b1 !2
0/2
0:(
0+2
b0 4
b0 p&
b0 5(
0x&
0,2
0-2
032
0s&
b1 -
b1 ~1
0t&
b1 ,
b1 }1
0u&
0|&
0=,
0\-
0T%
b1 &
b1 ;
b1 N-
0c-
b0 5
b0 K%
b0 o&
0\%
b0 7
b0 ($
b0 6,
00$
0W-
0O%
0^-
0W%
0+$
0Y-
0X%
0Q%
0,$
0`-
0`%
0Y%
0-$
04$
0F,
0j"
b1 6
b1 L%
b1 8,
b1 K-
0M,
b0 8
b0 a"
b0 '$
0r"
0A,
0e"
0H,
0m"
0'+
0C,
0n"
0g"
0.+
0J,
0v"
0o"
0F
00+
b0 :
b0 >
b0 ~*
0N
b1 9
b1 b"
b1 "+
b1 5,
07+
0A
0++
0I
02+
0C
0J
0-+
0K
0R
04+
b1 +
b1 1
b1 =
b1 }*
0&/
b1 0
b1 t.
0./
0!/
0)/
0#/
0*/
0+/
02/
b11 s.
b11 "
b11 #
#40000
1!.
1(.
1{-
1$.
1}-
1&.
14*
1<*
1/*
17*
11*
18*
19*
1@*
1v(
1~(
1q(
1y(
1s(
1z(
1{(
1$)
1Z'
1b'
1U'
1]'
1W'
1^'
1_'
1f'
06.
0/.
1>&
1F&
02.
0+.
19&
1A&
04.
0-.
1:.
1B&
1;&
1A.
1J&
1C&
0L*
b11000000 2
b11000000 Z)
b11000000 L-
0D*
1'-
1.-
1T0
0G*
0?*
0T-
0[-
0b-
0i-
0p-
0w-
0~-
0'.
0..
05.
0<.
0C.
0J.
0Q.
0X.
0_.
0>,
0E,
0L,
0S,
0Z,
0a,
0h,
0o,
0v,
0},
0&-
1#-
0--
1*-
04-
0;-
0B-
0I-
1B1
1G0
1O0
0W0
1V0
0I*
0P*
0A*
0H*
1M-
17,
1K2
1I0
0J0
1o/
00)
b110000000 3
b110000000 6(
b110000000 Y)
0()
b110 .
b110 <
b110 r.
1F2
0o.
1r/
0I1
0H1
0+)
0#)
1R2
1H2
142
1t/
0?1
0>1
0-)
04)
0%)
0,)
1M2
0p.
1g.
1x0
0!1
1v/
051
0r'
b1100000000 4
b1100000000 p&
b1100000000 5(
0j'
1D1
1O2
1;2
1~/
0s0
1r0
1y/
0+1
0m'
0e'
1A1
b1100000 *
b1100000 j.
1#0
0i0
1h/
0o'
0v'
1,-
0g'
0n'
1%-
b11 )
b11 (0
1k/
0`0
0x/
0R.
0V&
1*%
0K.
0N&
b110000000000 7
b110000000000 ($
b110000000000 6,
1"%
0/2
1g/
0'1
0%1
0M.
0Q&
1%%
0F.
0I&
1{$
0*2
0j/
0{/
0O.
0Z&
0S&
1'%
1.%
0H.
0R&
0K&
1}$
1&%
0%2
0&2
0,2
0-2
0]0
0[0
011
0/1
0<-
1l#
05-
1d#
b1100000 ,
b1100000 }1
b1100 -
b1100 ~1
0t&
0l/
0w/
07-
1g#
1u/
00-
1_#
0U-
b11000000 &
b11000000 ;
b11000000 N-
0\-
b11000000000 5
b11000000000 K%
b11000000000 o&
0T%
0f0
0d0
091
0<1
1{+
19-
1p#
1i#
1C1
b11 (
b11 '0
0F1
1t+
12-
1h#
1a#
0P-
0W-
0O%
0$0
061
0;1
0=1
1H"
1&,
0!0
1@1
0E1
0G1
1@"
1}+
0R-
0P%
0Y-
0X%
0Q%
1,$
0n0
1}/
1C"
1!,
0y0
0|/
1;"
1x+
0?,
b110000000000 6
b110000000000 L%
b110000000000 8,
b110000000000 K-
0F,
b1100000000001 8
b1100000000001 a"
b1100000000001 '$
1j"
0k0
1p0
0q0
1E"
1L"
1#,
0u0
0|0
0}0
1="
1D"
1z+
0:,
0A,
1e"
1j0
1t0
0<,
0f"
1'+
1C,
1n"
1g"
1h1
b1100 $
b1100 )0
b1100 L1
1a1
0)+
b1100000000001 :
b1100000000001 >
b1100000000001 ~*
1F
b11000000000010 9
b11000000000010 b"
b11000000000010 "+
b11000000000010 5,
10+
0#2
b1100000 !
b1100000 /
b1100000 !2
0(2
1c1
1\1
0$+
1A
1++
1'2
0$2
1.2
152
1<2
1C2
1J2
1Q2
1X2
1u1
1n1
1g1
1`1
1Y1
1R1
0B
0&+
1C
1J
1-+
0'
b11000000000010 +
b11000000000010 1
b11000000000010 =
b11000000000010 }*
1x1
0|.
b10 0
b10 t.
1&/
1w1
0w.
1!/
1z1
0y.
0"/
1#/
1*/
1^1
1e1
b101 s.
b1100 |1
b1100 J1
b11000000000101 "
b11000000000101 #
#50000
1/2
1=2
1*2
182
1,2
1-2
1:2
1\-
1j-
1X-
1f-
1Z-
1h-
1j)
1z)
1e)
1u)
062
0D2
1g)
1n)
1w)
1~)
012
0?2
1N(
1^(
032
0A2
1I(
1Y(
1K(
1R(
1[(
1b(
0c-
0q-
1!.
1/.
12'
1B'
b111001010 &
b111001010 ;
b111001010 N-
06.
0_-
0m-
1{-
1+.
1-'
1='
02.
0a-
0o-
1}-
1-.
1/'
16'
1?'
1F'
04.
0r)
0$*
14*
1D*
1t%
1&&
b111001010 2
b111001010 Z)
b111001010 L-
0L*
0m)
0})
1/*
1?*
1o%
1!&
0G*
0o)
0v)
0!*
0(*
11*
18*
1A*
1H*
1u-
1x%
1q%
1%.
1*&
1#&
0I*
0P*
0V(
0f(
1v(
1()
1b,
1p,
b1110010100 3
b1110010100 6(
b1110010100 Y)
00)
0Q(
0a(
1q(
1#)
1^,
1l,
0+)
0S(
0Z(
0c(
0j(
1s(
1z(
1%)
1,)
1`,
1n,
0-)
04)
0:'
0J'
1Z'
1j'
1X$
1h$
b11100101000 4
b11100101000 p&
b11100101000 5(
0r'
05'
0E'
1U'
1e'
1S$
1c$
0m'
07'
0>'
0G'
0N'
1W'
1^'
1g'
1n'
1U$
1\$
1e$
1l$
0o'
0v'
0|%
0.&
1>&
1N&
1<#
1L#
b111001010000 5
b111001010000 K%
b111001010000 o&
0V&
0w%
0)&
19&
1I&
17#
1G#
0Q&
0|-
0"&
0y%
0,.
02&
0+&
1:.
1B&
1;&
1H.
1R&
1K&
1m,
1@#
19#
1{,
1P#
1I#
0O.
0Z&
0S&
0i,
0w,
1'-
15-
0{/
1Z+
1h+
0!,
b1110010100000 6
b1110010100000 L%
b1110010100000 8,
b1110010100000 K-
0<-
0e,
0s,
1#-
11-
0/1
0(+
0/+
06+
0=+
0D+
0K+
0R+
0Y+
1V+
0`+
0g+
1d+
0n+
0u+
0|+
1y+
0%,
1",
0,,
1),
03,
1l/
08-
0g,
1<1
0u,
1%-
13-
1!+
1c0
0:-
0`$
1>1
0p$
1"%
12%
b11101010 !
b11101010 /
b11101010 !2
1Y2
0g.
b111 .
b111 <
b111 r.
b1110010100000 7
b1110010100000 ($
b1110010100000 6,
0:%
0[$
1;1
0k$
181
1{$
021
1-%
1w/
1T2
0q.
1h.
0(1
05%
0,$
0]$
0d$
0u/
0m$
0t$
161
1}$
1&%
041
1/%
16%
0:1
1V2
1B2
0*1
07%
0>%
0j"
0D#
0G0
0D1
0T#
0}/
0F1
1d#
0,1
011
1t#
1b0
171
b11101010 ,
b11101010 }1
b11110 -
b11110 ~1
b11100000 *
b11100000 j.
050
1.0
1"1
0'1
b11100101000000 8
b11100101000000 a"
b11100101000000 '$
0|#
0e"
0?#
0I0
0s/
0O#
0r0
0B1
0C1
0H1
1_#
1"0
1o#
b111 )
b111 (0
1&0
0?0
1>0
0%0
0w#
0'+
0C,
0n"
0g"
1X+
0t,
0H#
0A#
0F0
0D0
1f+
0$-
0X#
0Q#
0p0
0@1
0E1
0t+
12-
1h#
1a#
1h0
1$,
1@-
1x#
1q#
1i/
0_0
1+,
0G-
0"$
0y#
0F
00+
1~
0a+
0q/
b1000 (
b1000 '0
0T0
10"
0o+
1!0
1|/
0@"
1}+
0z/
1a0
1f0
1P"
1-,
0n/
0X0
0]0
b111001010000000 :
b111001010000000 >
b111001010000000 ~*
1X"
b111001010000000 9
b111001010000000 b"
b111001010000000 "+
b111001010000000 5,
04,
0A
0++
1y
0\+
0P0
0V0
1+"
0j+
1y0
1~0
0;"
0x+
0/0
0p/
1K"
0(,
0:0
1m/
1S"
0/,
0C
0J
0-+
1{
1$"
1^+
0L0
0S0
1-"
14"
1l+
1u0
1|0
0="
0D"
0z+
0+0
020
030
1M"
1T"
1*,
070
1<0
0=0
1U"
1\"
11,
1K0
0t0
1*0
160
b1110010100000000 +
b1110010100000000 1
b1110010100000000 =
b1110010100000000 }*
0&/
b100000000 0
b100000000 t.
1^/
1S1
0a1
1o1
b111001 $
b111001 )0
b111001 L1
1v1
0!/
1Y/
1y1
1{1
1N1
0\1
1j1
1q1
0x.
0#/
0*/
1[/
1b/
1t1
1P1
0^1
1l1
1s1
b1000000000 s.
b100000 %
b100000 K1
b111001 |1
b111001 J1
b1110011000000000 "
b1110011000000000 #
#60000
0/2
b11100000 !
b11100000 /
b11100000 !2
0=2
0*2
082
0,2
0-2
0:2
b11100 -
b11100 ~1
b11100000 ,
b11100000 }1
0\-
b111000000 &
b111000000 ;
b111000000 N-
0j-
0X-
0f-
0Z-
0h-
0j)
b111000000 2
b111000000 Z)
b111000000 L-
0z)
0e)
0u)
0g)
0n)
0w)
0~)
0N(
b1110000000 3
b1110000000 6(
b1110000000 Y)
0^(
0I(
0Y(
0K(
0R(
0[(
0b(
02'
b11100000000 4
b11100000000 p&
b11100000000 5(
0B'
0-'
0='
0/'
06'
0?'
0F'
0t%
b111000000000 5
b111000000000 K%
b111000000000 o&
0&&
0o%
0!&
0u-
0x%
0q%
0%.
0*&
0#&
0b,
b1110000000000 6
b1110000000000 L%
b1110000000000 8,
b1110000000000 K-
0p,
0^,
0l,
0`,
0n,
0X$
b1110000000000 7
b1110000000000 ($
b1110000000000 6,
0h$
0S$
0c$
0U$
0\$
0<1
0e$
0l$
0<#
0>1
b11100000000000 8
b11100000000000 a"
b11100000000000 '$
0L#
07#
0;1
1:1
191
1F1
0G#
0m,
0@#
09#
1u/
1H1
0{,
0P#
0I#
0Z+
1G0
1D1
1E1
b111000000000000 9
b111000000000000 b"
b111000000000000 "+
b111000000000000 5,
0h+
0V+
1I0
1s/
0d+
0X+
1F0
1D0
0f+
0~
1q/
b111 (
b111 '0
1T0
b111000000000000 :
b111000000000000 >
b111000000000000 ~*
00"
0y
1P0
1V0
0+"
1B
1&+
0{
0$"
0^+
1L0
1S0
0-"
04"
0l+
0K0
b1110000000000001 +
b1110000000000001 1
b1110000000000001 =
b1110000000000001 }*
1|.
b1 0
b1 t.
0^/
b111000 $
b111000 )0
b111000 L1
0S1
1w.
0Y/
0y1
0N1
1y.
1"/
0[/
0b/
0t1
0P1
b10 s.
b0 %
b0 K1
b111000 |1
b111000 J1
b1110000000000010 "
b1110000000000010 #
#70000
162
112
132
1c-
1_-
0/2
1D2
1a-
0*2
1?2
1r)
0,2
0-2
1A2
1m)
0=2
1o)
1v)
0\-
082
1q-
1V(
0X-
0:2
1m-
1Q(
0Z-
1o-
1S(
1Z(
0j)
0j-
1x-
1$*
1:'
0e)
0f-
1t-
1})
15'
0g)
0n)
0h-
1v-
1!*
1(*
17'
1>'
0N(
0z)
1,*
1}-
0&.
0-.
1f(
1|%
0I(
0u)
1'*
14*
0<*
b1110100 2
b1110100 Z)
b1110100 L-
0D*
1a(
1w%
0K(
0R(
0w)
0~)
1)*
10*
1/*
07*
0?*
0:(
1c(
1j(
1|-
1"&
1y%
02'
0^(
1n(
11*
18*
09*
0@*
0A*
0H*
0x&
1J'
1i,
0-'
0Y(
1i(
1v(
0~(
b11101000 3
b11101000 6(
b11101000 Y)
0()
0s&
1;,
1E'
1e,
0/'
06'
0[(
0b(
1k(
1r(
1q(
0y(
0#)
0u&
0|&
1=,
1G'
1N'
1g,
0t%
1U0
0B'
1R'
1s(
1z(
0{(
0$)
0%)
0,)
0\%
10$
1.&
1`$
0o%
1H0
0O0
1W0
0='
1M'
1Z'
0b'
b111010000 4
b111010000 p&
b111010000 5(
0j'
0W%
1+$
1)&
1[$
0u-
0x%
0q%
0K2
1J0
0o/
0t&
0?'
0F'
1O'
1V'
1U'
0]'
0e'
1R-
1P%
0`-
0`%
0Y%
1-$
14$
1,.
12&
1+&
1]$
1d$
0b,
0F2
1o.
0r/
1I1
0T%
0&&
16&
1W'
1^'
0_'
0f'
0g'
0n'
1?,
0M,
1r"
1w,
1D#
0^,
0l,
1s,
1z,
0H2
042
0t/
1?1
0O%
0!&
11&
1>&
0F&
b1110100000 5
b1110100000 K%
b1110100000 o&
0N&
0:,
0H,
1m"
0r,
1?#
00-
0v/
151
0Y-
0X%
0Q%
0%.
0*&
0#&
13.
1:&
13&
19&
0A&
0I&
1<,
1f"
1J,
1v"
1o"
1t,
1H#
1A#
0y/
1+1
0=.
0D.
0K.
0F,
0p,
1~,
1:.
1B&
1;&
0A.
0J&
0C&
0H.
0R&
0K&
1)+
17+
1a+
0h/
1!.
0(.
b1110100 &
b1110100 ;
b1110100 N-
0/.
08.
0?.
0F.
0A,
0k,
0y,
0"-
1'-
0)-
0.-
b11101000001 6
b11101000001 L%
b11101000001 8,
b11101000001 K-
05-
1$+
12+
1\+
1j+
1q+
1x+
1g.
0`,
0n,
1u,
1x/
1|,
1%-
0T-
0[-
0b-
0i-
0p-
0w-
0~-
1{-
0'.
0$.
0..
0+.
05.
0<.
0C.
0J.
0Q.
0X.
0_.
0>,
0E,
0L,
0S,
0Z,
0a,
0h,
0o,
0v,
0},
0&-
1#-
0--
0*-
04-
01-
0;-
0B-
0I-
1(+
1/+
16+
1=+
1D+
1K+
1R+
1Y+
1`+
1g+
1n+
1u+
1|+
1%,
1,,
13,
0,-
1w/
03-
0X$
0h$
1p$
1%1
1x$
1"%
1M-
17,
0!+
0*%
0F1
1R2
0}0
b11101000001 7
b11101000001 ($
b11101000001 6,
02%
0S$
0c$
1k$
1{/
021
1s$
1{$
b1010100 !
b1010100 /
b1010100 !2
0Y2
0f.
b110 .
b110 <
b110 r.
0%%
1u/
0H1
1M2
0p.
1x0
0!1
0-%
0,$
0U$
0\$
0e$
0l$
1m$
1t$
1/1
041
1u$
1|$
1}$
1&%
0T2
1q.
0h.
0'%
0.%
1E1
1O2
1;2
1~/
0s0
0/%
06%
0j"
0<#
0L#
1T#
1,1
111
1\#
1d#
0:1
0V2
0B2
0l#
1A1
1#0
0i0
0(1
b111010000010 8
b111010000010 a"
b111010000010 '$
0t#
0e"
07#
0G#
1O#
0"0
1W#
1_#
0b0
071
b1010100 ,
b1010100 }1
b1000 -
b1000 ~1
b1000000 *
b1000000 j.
150
0.0
0g#
1k/
0`0
0*1
0o#
0C,
0n"
0g"
0m,
0@#
09#
0{,
0P#
0I#
1$-
1X#
1Q#
0h0
0l/
1+-
1`#
1Y#
12-
1h#
1a#
b10 )
b10 (0
0&0
1?0
09-
0p#
0i#
1g/
1"1
1'1
0@-
0x#
0q#
00+
0Z+
0h+
1o+
0f0
1v+
0<1
1}+
0i/
0&,
0j/
0%0
b1110100000101 9
b1110100000101 b"
b1110100000101 "+
b1110100000101 5,
0-,
0,+
0V+
0d+
0k+
1B1
0r+
081
191
0>1
0y+
1n/
0c0
0",
0[0
0_0
0),
1.+
1X+
1f+
0D1
1m+
1@1
1t+
0e0
161
1;1
0{+
1:0
1a0
0$,
1X0
0]0
0+,
1N
1~
0q/
1T0
10"
0s/
b11 (
b11 '0
1G0
18"
0!0
0|/
1@"
0$0
0}/
0H"
1z/
0p/
0P"
0m/
b111010000010 :
b111010000010 >
b111010000010 ~*
0X"
1I
1y
0P0
0V0
1+"
0D0
0I0
13"
0y0
0~0
1;"
0n0
0r0
0C"
1/0
040
0K"
0>0
0S"
1K
1R
14+
1{
1$"
1^+
0L0
0S0
1-"
14"
1l+
0A0
1F0
15"
1<"
1s+
0u0
0|0
1="
1D"
1z+
1k0
0p0
0E"
0L"
0#,
1+0
120
0M"
0T"
0*,
170
1<0
0U"
0\"
01,
1K0
1@0
1t0
0j0
0*0
060
b1110100000101 +
b1110100000101 1
b1110100000101 =
b1110100000101 }*
1./
b100000101 0
b100000101 t.
1^/
1S1
1Z1
1a1
0h1
0o1
b111 $
b111 )0
b111 L1
0v1
1)/
1Y/
1y1
0{1
1N1
1U1
1\1
0c1
0j1
0q1
1x.
1+/
12/
1[/
1b/
1t1
1P1
1W1
1^1
0e1
0l1
0s1
b1000001011 s.
b100000 %
b100000 K1
b111 |1
b111 J1
b1111000001011 "
b1111000001011 #
#80000
0/2
1^-
0+2
0,2
0-2
0\-
0W-
1=,
0t&
10$
0T%
1+$
1:(
0O%
1-$
14$
1x&
0Y-
0X%
0Q%
0,$
1r"
0a-
0o-
0v-
1s&
0F,
0j"
1m"
0}-
0r)
0$*
0,*
0(2
1u&
1|&
0*1
0A,
0e"
1J,
1v"
1o"
b0 2
b0 Z)
b0 L-
04*
0m)
0})
0'*
0$2
1\%
0C,
0n"
0g"
17+
0/*
0o)
0v)
0!*
0(*
0)*
00*
0%2
0&2
1W%
041
00+
12+
01*
08*
0V(
0f(
0n(
132
0A2
1`-
1`%
1Y%
1(+
1/+
0,+
16+
1=+
1D+
1K+
1R+
1Y+
1`+
1g+
1n+
1u+
1|+
1%,
1,,
13,
b0 3
b0 6(
b0 Y)
0v(
0Q(
0a(
0i(
0U-
0R-
0P%
1M,
0>1
0!+
0q(
0S(
0Z(
0c(
0j(
0k(
0r(
0P-
1c-
0q-
0x-
b100 &
b100 ;
b100 N-
0!.
0?,
1H,
0O0
1W0
0V0
0s(
0z(
0:'
0J'
0R'
1T-
1[-
1b-
0_-
1i-
1p-
0m-
1w-
0t-
1~-
0{-
1'.
1..
15.
1<.
1C.
1J.
1Q.
1X.
1_.
1>,
0;,
1E,
1L,
1S,
1Z,
1a,
1h,
1o,
1v,
1},
1&-
1--
14-
1;-
1B-
1I-
0I0
1J0
0o/
b1 4
b1 p&
b1 5(
0Z'
05'
0E'
0M'
0M-
07,
1C1
022
1o.
0f.
0r/
1I1
0H1
0U'
07'
0>'
0G'
0N'
0O'
0V'
b0 .
b0 <
b0 r.
0H2
042
0t/
1?1
0W'
0^'
0|%
0.&
06&
0v/
151
b10 5
b10 K%
b10 o&
0>&
0w%
0)&
01&
1p.
0g.
0x0
1!1
111
0y/
1+1
09&
0|-
0"&
0y%
0,.
02&
0+&
03.
0:&
03&
0O2
0;2
0~/
1s0
1'1
0h/
0:.
0B&
0;&
0i,
0w,
0~,
0(1
0A1
b100 ,
b100 }1
b0 -
b0 ~1
b0 *
b0 j.
0#0
1i0
1x/
b100 6
b100 L%
b100 8,
b100 K-
0'-
0e,
0s,
0z,
1"1
0)1
b0 )
b0 (0
0k/
1`0
1%1
0#-
0g,
0u,
0|,
021
0%0
0g/
1{/
0%-
0`$
0p$
0x$
1,1
031
0_0
1j/
1/1
b1 7
b1 ($
b1 6,
0"%
0[$
1;1
0k$
0s$
0<1
0"0
1]0
1[0
1w/
0{$
0]$
0d$
0m$
0t$
0u$
0|$
161
0=1
0h0
1l/
191
0}$
0&%
0D#
0D1
0T#
0\#
0}/
1f0
1d0
1u/
b10 8
b10 a"
b10 '$
0d#
0?#
1s/
0O#
0W#
0r0
1$0
0B1
0F1
0_#
0<,
0f"
0X+
0t,
0H#
0A#
062
0D2
0R2
1D0
0f+
0$-
0X#
0Q#
0m+
0+-
0`#
0Y#
1p0
1n0
1@1
1E1
0G1
0t+
02-
0h#
0a#
0)+
0~
0a+
012
b0 !
b0 /
b0 !2
0=2
0?2
0M2
1q/
00"
0o+
08"
0v+
1!0
0|/
b10 :
b10 >
b10 ~*
0@"
b100 9
b100 b"
b100 "+
b100 5,
0}+
0$+
0y
0\+
0'2
0.2
052
0<2
092
0C2
0J2
0Q2
0X2
0u1
0n1
0g1
0`1
0Y1
0R1
1P0
0T0
0+"
0j+
b0 (
b0 '0
0G0
03"
0q+
1y0
0~0
0;"
0x+
0B
0&+
0{
0$"
0^+
1'
1L0
1S0
0U0
0-"
04"
0l+
1A0
1F0
0H0
05"
0<"
0s+
1u0
1|0
0="
0D"
0z+
0x1
0K0
0@0
0t0
b100 +
b100 1
b100 =
b100 }*
0|.
b100 0
b100 t.
0^/
0w1
0S1
0Z1
b0 $
b0 )0
b0 L1
0a1
0w.
0Y/
0y1
0z1
0N1
0U1
0\1
0y.
0"/
0[/
0b/
0t1
0P1
0W1
0^1
b1001 s.
b0 %
b0 K1
b0 |1
b0 J1
b1001 "
b1001 #
#90000
b10 !
b10 /
b10 !2
1/2
1+2
1,2
1-2
b110 ,
b110 }1
b10 -
b10 ~1
1t&
b110 &
b110 ;
b110 N-
1\-
b11 5
b11 K%
b11 o&
1T%
1W-
1O%
1Y-
1X%
1Q%
1,$
b110 6
b110 L%
b110 8,
b110 K-
1F,
b11 8
b11 a"
b11 '$
1j"
1A,
1e"
1'+
1C,
1n"
1g"
b11 :
b11 >
b11 ~*
1F
b110 9
b110 b"
b110 "+
b110 5,
10+
1A
1++
1C
1J
1-+
b110 +
b110 1
b110 =
b110 }*
b110 0
b110 t.
1&/
1!/
1#/
1*/
b1101 s.
b1101 "
b1101 #
#100000
